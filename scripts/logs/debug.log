2023-10-01 21:37:08,002 - main.runner.CustomHTTP - ERROR - DNS Lookup failed: [Errno -5] No address associated with hostname
2023-10-01 21:37:08,376 - main.runner.CustomHTTP - ERROR - DNS Lookup failed: [Errno -2] Name or service not known
2023-10-01 21:37:08,569 - main.runner.CustomHTTP - ERROR - Exception connecting TLS Socket: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: Hostname mismatch, certificate is not valid for 'ctldl.windowsupdate.com'. (_ssl.c:1123)
2023-10-01 21:37:08,863 - main.runner.CustomHTTP - ERROR - DNS Lookup failed: [Errno -2] Name or service not known
2023-10-01 21:37:09,090 - main.runner.CustomHTTP - ERROR - DNS Lookup failed: [Errno -2] Name or service not known
2023-10-01 21:37:09,176 - main.runner.CustomHTTP - ERROR - Exception connecting TLS Socket: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: Hostname mismatch, certificate is not valid for 'www.windowsupdate.com'. (_ssl.c:1123)
2023-10-01 21:37:09,250 - main.runner.CustomHTTP - ERROR - DNS Lookup failed: [Errno -2] Name or service not known
2023-10-01 21:37:09,254 - main.runner.CustomHTTP - ERROR - DNS Lookup failed: [Errno -5] No address associated with hostname
2023-10-01 21:37:09,255 - main.runner.CustomHTTP - ERROR - Exception connecting TLS Socket: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: self signed certificate in certificate chain (_ssl.c:1123)
2023-10-01 21:37:09,283 - main.runner.CustomHTTP - ERROR - DNS Lookup failed: [Errno -2] Name or service not known
2023-10-01 21:37:09,317 - main.runner.CustomHTTP - ERROR - DNS Lookup failed: [Errno -5] No address associated with hostname
2023-10-01 21:37:09,361 - main.runner.CustomHTTP - ERROR - DNS Lookup failed: [Errno -2] Name or service not known
2023-10-01 21:37:09,417 - main.runner.CustomHTTP - ERROR - DNS Lookup failed: [Errno -2] Name or service not known
2023-10-01 21:37:09,593 - main.runner.CustomHTTP - ERROR - Exception connecting TLS Socket: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: unable to get local issuer certificate (_ssl.c:1123)
2023-10-01 21:37:09,782 - main.runner.CustomHTTP - ERROR - Exception connecting TLS Socket: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: unable to get local issuer certificate (_ssl.c:1123)
2023-10-01 21:37:09,869 - main.runner.CustomHTTP - ERROR - DNS Lookup failed: [Errno -5] No address associated with hostname
2023-10-01 21:37:09,870 - main.runner.CustomHTTP - ERROR - DNS Lookup failed: [Errno -2] Name or service not known
2023-10-01 21:37:09,918 - main.runner.CustomHTTP - ERROR - DNS Lookup failed: [Errno -5] No address associated with hostname
2023-10-01 21:37:09,959 - main.runner.CustomHTTP - ERROR - DNS Lookup failed: [Errno -2] Name or service not known
2023-10-01 21:37:10,027 - main.runner.CustomHTTP - ERROR - DNS Lookup failed: [Errno -2] Name or service not known
2023-10-01 21:37:10,034 - main.runner.CustomHTTP - ERROR - DNS Lookup failed: [Errno -2] Name or service not known
2023-10-01 21:37:10,221 - main.runner.CustomHTTP - ERROR - Exception connecting TLS Socket: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: Hostname mismatch, certificate is not valid for 'ocsp.digicert.com'. (_ssl.c:1123)
2023-10-01 21:37:10,259 - main.runner.CustomHTTP - ERROR - DNS Lookup failed: [Errno -2] Name or service not known
2023-10-01 21:37:10,270 - main.runner.CustomHTTP - ERROR - Exception connecting TLS Socket: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: Hostname mismatch, certificate is not valid for 'www.msftncsi.com'. (_ssl.c:1123)
2023-10-01 21:37:10,390 - main.runner.CustomHTTP - ERROR - DNS Lookup failed: [Errno -2] Name or service not known
2023-10-01 21:37:10,401 - main.runner.CustomHTTP - ERROR - DNS Lookup failed: [Errno -2] Name or service not known
2023-10-01 21:37:10,428 - main.runner.CustomHTTP - ERROR - DNS Lookup failed: [Errno -2] Name or service not known
2023-10-01 21:37:10,483 - main.runner.CustomHTTP - ERROR - DNS Lookup failed: [Errno -5] No address associated with hostname
2023-10-01 21:37:10,510 - main.runner.CustomHTTP - ERROR - DNS Lookup failed: [Errno -5] No address associated with hostname
2023-10-01 21:37:10,562 - main.runner.CustomHTTP - ERROR - Exception connecting TLS Socket: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: self signed certificate in certificate chain (_ssl.c:1123)
2023-10-01 21:37:10,596 - main.runner.CustomHTTP - ERROR - DNS Lookup failed: [Errno -2] Name or service not known
2023-10-01 21:37:10,612 - main.runner.CustomHTTP - ERROR - DNS Lookup failed: [Errno -5] No address associated with hostname
2023-10-01 21:37:10,636 - main.runner.CustomHTTP - ERROR - DNS Lookup failed: [Errno -2] Name or service not known
2023-10-01 21:37:10,745 - main.runner.CustomHTTP - ERROR - DNS Lookup failed: [Errno -2] Name or service not known
2023-10-01 21:37:10,767 - main.runner.CustomHTTP - ERROR - DNS Lookup failed: [Errno -2] Name or service not known
2023-10-01 21:37:10,790 - main.runner.CustomHTTP - ERROR - DNS Lookup failed: [Errno -2] Name or service not known
2023-10-01 21:37:10,808 - main.runner.CustomHTTP - ERROR - Exception connecting TLS Socket: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: Hostname mismatch, certificate is not valid for 'www.adnxs.com'. (_ssl.c:1123)
2023-10-01 21:37:10,812 - main.runner.CustomHTTP - ERROR - Exception connecting TLS Socket: [Errno 111] Connection refused
2023-10-01 21:37:10,832 - main.runner.CustomHTTP - ERROR - DNS Lookup failed: [Errno -5] No address associated with hostname
2023-10-01 21:37:10,951 - main.runner.CustomHTTP - ERROR - DNS Lookup failed: [Errno -2] Name or service not known
2023-10-01 21:37:10,970 - main.runner.CustomHTTP - ERROR - Exception connecting TLS Socket: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: Hostname mismatch, certificate is not valid for 'www.forms.gle'. (_ssl.c:1123)
2023-10-01 21:37:11,004 - main.runner.CustomHTTP - ERROR - DNS Lookup failed: [Errno -2] Name or service not known
2023-10-01 21:37:11,018 - main.runner.CustomHTTP - ERROR - DNS Lookup failed: [Errno -5] No address associated with hostname
2023-10-01 21:37:11,062 - main.runner.CustomHTTP - ERROR - DNS Lookup failed: [Errno -5] No address associated with hostname
2023-10-01 21:37:11,343 - main.runner.CustomHTTP - ERROR - DNS Lookup failed: [Errno -2] Name or service not known
2023-10-01 21:37:11,446 - main.runner.CustomHTTP - ERROR - DNS Lookup failed: [Errno -2] Name or service not known
2023-10-01 21:37:11,447 - main.runner.CustomHTTP - ERROR - DNS Lookup failed: [Errno -5] No address associated with hostname
2023-10-01 21:37:11,456 - main.runner.CustomHTTP - ERROR - DNS Lookup failed: [Errno -2] Name or service not known
2023-10-01 21:37:11,520 - main.runner.CustomHTTP - ERROR - DNS Lookup failed: [Errno -5] No address associated with hostname
2023-10-01 21:37:11,583 - main.runner.CustomHTTP - ERROR - Exception connecting TLS Socket: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: Hostname mismatch, certificate is not valid for 'www.windows.net'. (_ssl.c:1123)
2023-10-01 21:37:11,642 - main.runner.CustomHTTP - ERROR - DNS Lookup failed: [Errno -5] No address associated with hostname
2023-10-01 21:37:11,650 - main.runner.CustomHTTP - ERROR - Exception connecting TLS Socket: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: unable to get local issuer certificate (_ssl.c:1123)
2023-10-01 21:37:11,667 - main.runner.CustomHTTP - ERROR - DNS Lookup failed: [Errno -5] No address associated with hostname
2023-10-01 21:37:11,795 - main.runner.CustomHTTP - ERROR - DNS Lookup failed: [Errno -2] Name or service not known
2023-10-01 21:37:11,797 - main.runner.CustomHTTP - ERROR - DNS Lookup failed: [Errno -5] No address associated with hostname
2023-10-01 21:37:11,798 - main.runner.CustomHTTP - ERROR - DNS Lookup failed: [Errno -5] No address associated with hostname
2023-10-01 21:37:11,860 - main.runner.CustomHTTP - ERROR - DNS Lookup failed: [Errno -5] No address associated with hostname
2023-10-01 21:37:12,125 - main.runner.CustomHTTP - ERROR - DNS Lookup failed: [Errno -5] No address associated with hostname
2023-10-01 21:37:12,324 - main.runner.CustomHTTP - ERROR - Exception connecting TLS Socket: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: Hostname mismatch, certificate is not valid for 'www.msftconnecttest.com'. (_ssl.c:1123)
2023-10-01 21:37:12,392 - main.runner.CustomHTTP - ERROR - DNS Lookup failed: [Errno -2] Name or service not known
2023-10-01 21:37:12,523 - main.runner.CustomHTTP - ERROR - DNS Lookup failed: [Errno -5] No address associated with hostname
2023-10-01 21:37:12,787 - main.runner.CustomHTTP - ERROR - Exception connecting TLS Socket: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: unable to get local issuer certificate (_ssl.c:1123)
2023-10-01 21:37:13,175 - main.runner.CustomHTTP - ERROR - DNS Lookup failed: [Errno -2] Name or service not known
2023-10-01 21:37:13,280 - main.runner.CustomHTTP - ERROR - DNS Lookup failed: [Errno -5] No address associated with hostname
2023-10-01 21:37:13,295 - main.runner.CustomHTTP - ERROR - DNS Lookup failed: [Errno -2] Name or service not known
2023-10-01 21:37:13,563 - main.runner.CustomHTTP - ERROR - DNS Lookup failed: [Errno -2] Name or service not known
2023-10-01 21:37:13,781 - main.runner.CustomHTTP - ERROR - Exception processing response: Invalid Response Line
2023-10-01 21:37:14,080 - main.runner.CustomHTTP - ERROR - Exception connecting TLS Socket: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: unable to get local issuer certificate (_ssl.c:1123)
2023-10-01 21:37:14,314 - main.runner.CustomHTTP - ERROR - DNS Lookup failed: [Errno -2] Name or service not known
2023-10-01 21:37:14,429 - main.runner.CustomHTTP - ERROR - DNS Lookup failed: [Errno -2] Name or service not known
2023-10-01 21:37:14,459 - main.runner.CustomHTTP - ERROR - DNS Lookup failed: [Errno -5] No address associated with hostname
2023-10-01 21:37:14,483 - main.runner.CustomHTTP - ERROR - Exception connecting TLS Socket: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: Hostname mismatch, certificate is not valid for 'www.list-manage.com'. (_ssl.c:1123)
2023-10-01 21:37:14,560 - main.runner.CustomHTTP - ERROR - DNS Lookup failed: [Errno -5] No address associated with hostname
2023-10-01 21:37:14,564 - main.runner.CustomHTTP - ERROR - DNS Lookup failed: [Errno -2] Name or service not known
2023-10-01 21:37:14,627 - main.runner.CustomHTTP - ERROR - DNS Lookup failed: [Errno -2] Name or service not known
2023-10-01 21:37:14,731 - main.runner.CustomHTTP - ERROR - Exception connecting TLS Socket: [Errno 111] Connection refused
2023-10-01 21:37:14,758 - main.runner.CustomHTTP - ERROR - DNS Lookup failed: [Errno -2] Name or service not known
2023-10-01 21:37:14,814 - main.runner.CustomHTTP - ERROR - DNS Lookup failed: [Errno -2] Name or service not known
2023-10-01 21:37:14,914 - main.runner.CustomHTTP - ERROR - DNS Lookup failed: [Errno -2] Name or service not known
2023-10-01 21:37:14,915 - main.runner.CustomHTTP - ERROR - DNS Lookup failed: [Errno -5] No address associated with hostname
2023-10-01 21:37:15,003 - main.runner.CustomHTTP - ERROR - DNS Lookup failed: [Errno -5] No address associated with hostname
2023-10-01 21:37:15,016 - main.runner.CustomHTTP - ERROR - DNS Lookup failed: [Errno -2] Name or service not known
2023-10-01 21:37:15,081 - main.runner.CustomHTTP - ERROR - DNS Lookup failed: [Errno -2] Name or service not known
2023-10-01 21:37:15,142 - main.runner.CustomHTTP - ERROR - Exception connecting TLS Socket: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: Hostname mismatch, certificate is not valid for 'e673.dsce9.akamaiedge.net'. (_ssl.c:1123)
2023-10-01 21:37:15,196 - main.runner.CustomHTTP - ERROR - DNS Lookup failed: [Errno -2] Name or service not known
2023-10-01 21:37:15,198 - main.runner.CustomHTTP - ERROR - Exception connecting TLS Socket: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: Hostname mismatch, certificate is not valid for 'www.omtrdc.net'. (_ssl.c:1123)
2023-10-01 21:37:15,229 - main.runner.CustomHTTP - ERROR - DNS Lookup failed: [Errno -5] No address associated with hostname
2023-10-01 21:37:15,414 - main.runner.CustomHTTP - ERROR - Exception connecting TLS Socket: timed out
2023-10-01 21:37:15,480 - main.runner.CustomHTTP - ERROR - DNS Lookup failed: [Errno -2] Name or service not known
2023-10-01 21:37:15,499 - main.runner.CustomHTTP - ERROR - DNS Lookup failed: [Errno -5] No address associated with hostname
2023-10-01 21:37:15,629 - main.runner.CustomHTTP - ERROR - DNS Lookup failed: [Errno -2] Name or service not known
2023-10-01 21:37:15,848 - main.runner.CustomHTTP - ERROR - Exception connecting TLS Socket: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: Hostname mismatch, certificate is not valid for 'www.dotomi.com'. (_ssl.c:1123)
2023-10-01 21:37:16,208 - main.runner.CustomHTTP - ERROR - DNS Lookup failed: [Errno -2] Name or service not known
2023-10-01 21:37:16,335 - main.runner.CustomHTTP - ERROR - DNS Lookup failed: [Errno -5] No address associated with hostname
2023-10-01 21:37:16,402 - main.runner.CustomHTTP - ERROR - DNS Lookup failed: [Errno -5] No address associated with hostname
2023-10-01 21:37:16,522 - main.runner.CustomHTTP - ERROR - Exception connecting TLS Socket: timed out
2023-10-01 21:37:16,546 - main.runner.CustomHTTP - ERROR - DNS Lookup failed: [Errno -2] Name or service not known
2023-10-01 21:37:16,594 - main.runner.CustomHTTP - ERROR - DNS Lookup failed: [Errno -5] No address associated with hostname
2023-10-01 21:37:16,594 - main.runner.CustomHTTP - ERROR - DNS Lookup failed: [Errno -2] Name or service not known
2023-10-01 21:37:16,630 - main.runner.CustomHTTP - ERROR - DNS Lookup failed: [Errno -2] Name or service not known
2023-10-01 21:37:16,639 - main.runner.CustomHTTP - ERROR - DNS Lookup failed: [Errno -2] Name or service not known
2023-10-01 21:37:16,648 - main.runner.CustomHTTP - ERROR - DNS Lookup failed: [Errno -2] Name or service not known
2023-10-01 21:37:16,668 - main.runner.CustomHTTP - ERROR - DNS Lookup failed: [Errno -2] Name or service not known
2023-10-01 21:37:16,698 - main.runner.CustomHTTP - ERROR - DNS Lookup failed: [Errno -2] Name or service not known
2023-10-01 21:37:16,931 - main.runner.CustomHTTP - ERROR - DNS Lookup failed: [Errno -2] Name or service not known
2023-10-01 21:37:17,035 - main.runner.CustomHTTP - ERROR - DNS Lookup failed: [Errno -5] No address associated with hostname
2023-10-01 21:37:17,167 - main.runner.CustomHTTP - ERROR - DNS Lookup failed: [Errno -2] Name or service not known
2023-10-01 21:37:17,168 - main.runner.CustomHTTP - ERROR - DNS Lookup failed: [Errno -2] Name or service not known
2023-10-01 21:37:17,208 - main.runner.CustomHTTP - ERROR - DNS Lookup failed: [Errno -5] No address associated with hostname
2023-10-01 21:37:17,224 - main.runner.CustomHTTP - ERROR - DNS Lookup failed: [Errno -2] Name or service not known
2023-10-01 21:37:17,486 - main.runner.CustomHTTP - ERROR - DNS Lookup failed: [Errno -2] Name or service not known
2023-10-01 21:37:17,506 - main.runner.CustomHTTP - ERROR - DNS Lookup failed: [Errno -5] No address associated with hostname
2023-10-01 21:37:17,507 - main.runner.CustomHTTP - ERROR - DNS Lookup failed: [Errno -5] No address associated with hostname
2023-10-01 21:37:17,532 - main.runner.CustomHTTP - ERROR - DNS Lookup failed: [Errno -2] Name or service not known
2023-10-01 21:37:17,660 - main.runner.CustomHTTP - ERROR - Exception connecting TLS Socket: timed out
2023-10-01 21:37:17,742 - main.runner.CustomHTTP - ERROR - Exception connecting TLS Socket: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: Hostname mismatch, certificate is not valid for 'www.amzn.to'. (_ssl.c:1123)
2023-10-01 21:37:17,762 - main.runner.CustomHTTP - ERROR - DNS Lookup failed: [Errno -2] Name or service not known
2023-10-01 21:37:17,763 - main.runner.CustomHTTP - ERROR - DNS Lookup failed: [Errno -2] Name or service not known
2023-10-01 21:37:17,936 - main.runner.CustomHTTP - ERROR - DNS Lookup failed: [Errno -2] Name or service not known
2023-10-01 21:37:18,117 - main.runner.CustomHTTP - ERROR - DNS Lookup failed: [Errno -2] Name or service not known
2023-10-01 21:37:18,118 - main.runner.CustomHTTP - ERROR - Exception connecting TLS Socket: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: Hostname mismatch, certificate is not valid for 'www.xboxlive.com'. (_ssl.c:1123)
2023-10-01 21:37:18,210 - main.runner.CustomHTTP - ERROR - DNS Lookup failed: [Errno -2] Name or service not known
2023-10-01 21:37:18,211 - main.runner.CustomHTTP - ERROR - Exception connecting TLS Socket: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: Hostname mismatch, certificate is not valid for 'www.gamepass.com'. (_ssl.c:1123)
2023-10-01 21:37:18,384 - main.runner.CustomHTTP - ERROR - Exception connecting TLS Socket: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: Hostname mismatch, certificate is not valid for 'www.edgekey.net'. (_ssl.c:1123)
2023-10-01 21:37:18,478 - main.runner.CustomHTTP - ERROR - DNS Lookup failed: [Errno -5] No address associated with hostname
2023-10-01 21:37:18,585 - main.runner.CustomHTTP - ERROR - DNS Lookup failed: [Errno -2] Name or service not known
2023-10-01 21:37:18,980 - main.runner.CustomHTTP - ERROR - DNS Lookup failed: [Errno -2] Name or service not known
2023-10-01 21:37:19,417 - main.runner.CustomHTTP - ERROR - Exception connecting TLS Socket: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: self signed certificate in certificate chain (_ssl.c:1123)
2023-10-01 21:37:19,803 - main.runner.CustomHTTP - ERROR - DNS Lookup failed: [Errno -5] No address associated with hostname
2023-10-01 21:37:19,998 - main.runner.CustomHTTP - ERROR - DNS Lookup failed: [Errno -2] Name or service not known
2023-10-01 21:37:20,001 - main.runner.CustomHTTP - ERROR - Exception connecting TLS Socket: timed out
2023-10-01 21:37:20,002 - main.runner.CustomHTTP - ERROR - DNS Lookup failed: [Errno -5] No address associated with hostname
2023-10-01 21:37:20,390 - main.runner.CustomHTTP - ERROR - Exception connecting TLS Socket: timed out
2023-10-01 21:37:20,859 - main.runner.CustomHTTP - ERROR - DNS Lookup failed: [Errno -5] No address associated with hostname
2023-10-01 21:37:20,887 - main.runner.CustomHTTP - ERROR - DNS Lookup failed: [Errno -5] No address associated with hostname
2023-10-01 21:37:21,848 - main.runner.CustomHTTP - ERROR - Exception connecting TLS Socket: timed out
2023-10-01 21:37:22,711 - main.runner.CustomHTTP - ERROR - Exception connecting TLS Socket: timed out
2023-10-01 21:37:23,453 - main.runner.CustomHTTP - ERROR - Exception connecting TLS Socket: timed out
2023-10-01 21:43:57,331 - matplotlib.font_manager - DEBUG - findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=14.0.
2023-10-01 21:43:57,332 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2023-10-01 21:43:57,332 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 10.05
2023-10-01 21:43:57,333 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2023-10-01 21:43:57,333 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2023-10-01 21:43:57,333 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 10.05
2023-10-01 21:43:57,333 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2023-10-01 21:43:57,333 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.335
2023-10-01 21:43:57,333 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 10.05
2023-10-01 21:43:57,333 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-10-01 21:43:57,334 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 10.05
2023-10-01 21:43:57,334 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2023-10-01 21:43:57,334 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2023-10-01 21:43:57,334 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.335
2023-10-01 21:43:57,334 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-10-01 21:43:57,334 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.335
2023-10-01 21:43:57,335 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.05
2023-10-01 21:43:57,335 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.335
2023-10-01 21:43:57,335 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2023-10-01 21:43:57,335 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-10-01 21:43:57,335 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2023-10-01 21:43:57,335 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2023-10-01 21:43:57,335 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 10.05
2023-10-01 21:43:57,336 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.335
2023-10-01 21:43:57,336 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2023-10-01 21:43:57,336 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2023-10-01 21:43:57,336 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2023-10-01 21:43:57,336 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.335
2023-10-01 21:43:57,336 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
2023-10-01 21:43:57,336 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 10.05
2023-10-01 21:43:57,336 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.335
2023-10-01 21:43:57,337 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2023-10-01 21:43:57,337 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 0.33499999999999996
2023-10-01 21:43:57,337 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 1.335
2023-10-01 21:43:57,337 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2023-10-01 21:43:57,337 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 10.05
2023-10-01 21:43:57,337 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2023-10-01 21:43:57,337 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2023-10-01 21:43:57,338 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.335
2023-10-01 21:43:57,338 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'MathJax_Typewriter' (MathJax_Typewriter-Regular.otf) normal normal 400 normal>) = 10.05
2023-10-01 21:43:57,338 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'MathJax_Size3' (MathJax_Size3-Regular.otf) normal normal 400 normal>) = 10.05
2023-10-01 21:43:57,338 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'FreeSans' (FreeSansBold.ttf) normal normal 600 normal>) = 10.24
2023-10-01 21:43:57,338 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lato' (Lato-SemiboldItalic.ttf) italic normal 600 normal>) = 11.24
2023-10-01 21:43:57,338 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Quicksand' (Quicksand-Bold.ttf) normal normal 700 normal>) = 10.335
2023-10-01 21:43:57,338 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'FreeMono' (FreeMonoBold.otf) normal normal 700 normal>) = 10.335
2023-10-01 21:43:57,339 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lato' (Lato-BlackItalic.ttf) italic normal 900 normal>) = 11.525
2023-10-01 21:43:57,339 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'C059' (C059-Italic.otf) italic normal 400 normal>) = 11.05
2023-10-01 21:43:57,339 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'MathJax_Math' (MathJax_Math-Regular.otf) normal normal 400 normal>) = 10.05
2023-10-01 21:43:57,339 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Math TeX Gyre' (DejaVuMathTeXGyre.ttf) normal normal 400 normal>) = 10.05
2023-10-01 21:43:57,339 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'FreeSerif' (FreeSerifItalic.otf) italic normal 400 normal>) = 11.05
2023-10-01 21:43:57,339 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'URW Bookman' (URWBookman-Demi.otf) normal normal 600 normal>) = 10.24
2023-10-01 21:43:57,339 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'OpenSymbol' (opens___.ttf) normal normal 400 normal>) = 10.05
2023-10-01 21:43:57,340 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Liberation Mono' (LiberationMono-Italic.ttf) italic normal 400 normal>) = 11.05
2023-10-01 21:43:57,340 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'FreeMono' (FreeMonoBoldOblique.otf) oblique normal 700 normal>) = 11.335
2023-10-01 21:43:57,340 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Bitstream Vera Sans Mono' (VeraMoBI.ttf) oblique normal 700 normal>) = 11.335
2023-10-01 21:43:57,340 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'MathJax_Fraktur' (MathJax_Fraktur-Bold.otf) normal normal 700 normal>) = 10.335
2023-10-01 21:43:57,340 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Sans' (DejaVuSansCondensed-BoldOblique.ttf) oblique normal 700 condensed>) = 1.535
2023-10-01 21:43:57,340 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'FreeMono' (FreeMono.ttf) normal normal 400 normal>) = 10.05
2023-10-01 21:43:57,340 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lato' (Lato-Medium.ttf) normal normal 500 normal>) = 10.145
2023-10-01 21:43:57,341 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Bitstream Vera Sans Mono' (VeraMono.ttf) normal normal 400 normal>) = 10.05
2023-10-01 21:43:57,341 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'MathJax_Vector-Bold' (MathJax_Vector-Bold.otf) normal normal 500 normal>) = 10.145
2023-10-01 21:43:57,341 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Liberation Sans' (LiberationSans-Bold.ttf) normal normal 700 normal>) = 10.335
2023-10-01 21:43:57,341 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-BoldItalic.otf) italic normal 700 normal>) = 11.335
2023-10-01 21:43:57,341 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'eufm10' (eufm10.ttf) normal normal 400 normal>) = 10.05
2023-10-01 21:43:57,341 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'P052' (P052-Bold.otf) normal normal 700 normal>) = 10.335
2023-10-01 21:43:57,341 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'FreeSans' (FreeSansBoldOblique.otf) oblique normal 600 normal>) = 11.24
2023-10-01 21:43:57,341 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'MathJax_Size4' (MathJax_Size4-Regular.otf) normal normal 400 normal>) = 10.05
2023-10-01 21:43:57,342 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Italic.ttf) italic normal 400 condensed>) = 11.25
2023-10-01 21:43:57,342 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'FontAwesome' (fontawesome-webfont.ttf) normal normal 400 normal>) = 10.05
2023-10-01 21:43:57,342 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2023-10-01 21:43:57,342 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Nimbus Sans' (NimbusSans-Italic.otf) italic normal 400 normal>) = 11.05
2023-10-01 21:43:57,342 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'C059' (C059-BdIta.otf) italic normal 700 normal>) = 11.335
2023-10-01 21:43:57,342 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Quicksand Medium' (Quicksand-Medium.ttf) normal normal 500 normal>) = 10.145
2023-10-01 21:43:57,342 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Liberation Serif' (LiberationSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-10-01 21:43:57,343 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Bitstream Vera Sans Mono' (VeraMoBd.ttf) normal normal 700 normal>) = 10.335
2023-10-01 21:43:57,343 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2023-10-01 21:43:57,343 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Liberation Mono' (LiberationMono-Italic.ttf) italic normal 400 normal>) = 11.05
2023-10-01 21:43:57,343 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'MathJax_Fraktur' (MathJax_Fraktur-Regular.otf) normal normal 400 normal>) = 10.05
2023-10-01 21:43:57,343 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'P052' (P052-BoldItalic.otf) italic normal 700 normal>) = 11.335
2023-10-01 21:43:57,343 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lato' (Lato-MediumItalic.ttf) italic normal 500 normal>) = 11.145
2023-10-01 21:43:57,343 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'elusiveicons' (elusiveicons-webfont.ttf) normal normal 500 normal>) = 10.145
2023-10-01 21:43:57,344 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Regular.otf) normal normal 400 normal>) = 10.05
2023-10-01 21:43:57,344 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Bitstream Vera Serif' (VeraSe.ttf) normal normal 400 normal>) = 10.05
2023-10-01 21:43:57,344 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'rsfs10' (rsfs10.ttf) italic normal 400 normal>) = 11.05
2023-10-01 21:43:57,344 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Liberation Sans' (LiberationSans-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-10-01 21:43:57,344 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'FreeSans' (FreeSansBoldOblique.ttf) oblique normal 600 normal>) = 11.24
2023-10-01 21:43:57,344 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Liberation Sans' (LiberationSans-Italic.ttf) italic normal 400 normal>) = 11.05
2023-10-01 21:43:57,344 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Z003' (Z003-MediumItalic.otf) italic normal 500 normal>) = 11.145
2023-10-01 21:43:57,344 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'C059' (C059-Roman.otf) normal normal 400 normal>) = 10.05
2023-10-01 21:43:57,345 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'esint10' (esint10.ttf) normal normal 400 normal>) = 10.05
2023-10-01 21:43:57,345 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2023-10-01 21:43:57,345 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'URW Bookman' (URWBookman-Light.otf) normal normal 300 normal>) = 10.145
2023-10-01 21:43:57,345 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 1.335
2023-10-01 21:43:57,345 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'URW Gothic' (URWGothic-DemiOblique.otf) oblique normal 600 normal>) = 11.24
2023-10-01 21:43:57,345 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'FreeSerif' (FreeSerifBoldItalic.otf) italic normal 700 normal>) = 11.335
2023-10-01 21:43:57,345 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'URW Gothic' (URWGothic-Book.otf) normal normal 400 normal>) = 10.05
2023-10-01 21:43:57,346 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'P052' (P052-Italic.otf) italic normal 400 normal>) = 11.05
2023-10-01 21:43:57,346 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lato' (Lato-Light.ttf) normal normal 300 normal>) = 10.145
2023-10-01 21:43:57,346 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'MathJax_Caligraphic' (MathJax_Caligraphic-Regular.otf) normal normal 400 normal>) = 10.05
2023-10-01 21:43:57,346 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lato' (Lato-HeavyItalic.ttf) italic normal 800 normal>) = 11.43
2023-10-01 21:43:57,346 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'msbm10' (msbm10.ttf) normal normal 400 normal>) = 10.05
2023-10-01 21:43:57,346 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-10-01 21:43:57,346 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Liberation Serif' (LiberationSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-10-01 21:43:57,347 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Cantarell' (Cantarell-Thin.otf) normal normal 100 normal>) = 10.335
2023-10-01 21:43:57,347 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'MathJax_WinChrome' (MathJax_WinChrome-Regular.otf) normal normal 400 normal>) = 10.05
2023-10-01 21:43:57,347 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'FreeSerif' (FreeSerifBold.ttf) normal normal 700 normal>) = 10.335
2023-10-01 21:43:57,347 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Bitstream Vera Sans' (VeraBd.ttf) normal normal 700 normal>) = 1.2440909090909091
2023-10-01 21:43:57,347 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Mono' (NotoMono-Regular.ttf) normal normal 400 normal>) = 10.05
2023-10-01 21:43:57,347 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Bitstream Vera Sans' (Vera.ttf) normal normal 400 normal>) = 0.9590909090909092
2023-10-01 21:43:57,347 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'msam10' (msam10.ttf) normal normal 400 normal>) = 10.05
2023-10-01 21:43:57,348 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lato' (Lato-Black.ttf) normal normal 900 normal>) = 10.525
2023-10-01 21:43:57,348 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 0.33499999999999996
2023-10-01 21:43:57,348 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'MathJax_Vector' (MathJax_Vector-Regular.otf) normal normal 500 normal>) = 10.145
2023-10-01 21:43:57,348 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'FreeSerif' (FreeSerifItalic.ttf) italic normal 400 normal>) = 11.05
2023-10-01 21:43:57,348 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'FreeMono' (FreeMonoBoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-10-01 21:43:57,348 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Regular.otf) normal normal 400 normal>) = 10.05
2023-10-01 21:43:57,348 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'URW Gothic' (URWGothic-BookOblique.otf) oblique normal 400 normal>) = 11.05
2023-10-01 21:43:57,349 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Italic.otf) italic normal 400 normal>) = 11.05
2023-10-01 21:43:57,349 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lato' (Lato-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-10-01 21:43:57,349 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Sans' (DejaVuSans-ExtraLight.ttf) normal normal 200 normal>) = 0.24
2023-10-01 21:43:57,349 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'URW Bookman' (URWBookman-LightItalic.otf) italic normal 300 normal>) = 11.145
2023-10-01 21:43:57,349 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Liberation Mono' (LiberationMono-Regular.ttf) normal normal 400 normal>) = 10.05
2023-10-01 21:43:57,349 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Cantarell' (Cantarell-Light.otf) normal normal 300 normal>) = 10.145
2023-10-01 21:43:57,349 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'URW Bookman' (URWBookman-DemiItalic.otf) italic normal 600 normal>) = 11.24
2023-10-01 21:43:57,349 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'MathJax_Size1' (MathJax_Size1-Regular.otf) normal normal 400 normal>) = 10.05
2023-10-01 21:43:57,350 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Liberation Mono' (LiberationMono-Bold.ttf) normal normal 700 normal>) = 10.335
2023-10-01 21:43:57,350 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2023-10-01 21:43:57,350 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Serif' (DejaVuSerifCondensed.ttf) normal normal 400 condensed>) = 10.25
2023-10-01 21:43:57,350 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'MathJax_Math' (MathJax_Math-BoldItalic.otf) italic normal 700 normal>) = 11.335
2023-10-01 21:43:57,350 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Regular.otf) normal normal 400 condensed>) = 10.25
2023-10-01 21:43:57,350 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Sans' (DejaVuSansCondensed.ttf) normal normal 400 condensed>) = 0.25
2023-10-01 21:43:57,350 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'MathJax_Caligraphic' (MathJax_Caligraphic-Bold.otf) normal normal 700 normal>) = 10.335
2023-10-01 21:43:57,351 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Bold.otf) normal normal 700 normal>) = 10.335
2023-10-01 21:43:57,351 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'FreeSerif' (FreeSerif.otf) normal normal 400 normal>) = 10.05
2023-10-01 21:43:57,351 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Serif' (DejaVuSerifCondensed-BoldItalic.ttf) italic normal 700 condensed>) = 11.535
2023-10-01 21:43:57,351 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Nimbus Roman' (NimbusRoman-BoldItalic.otf) italic normal 700 normal>) = 11.335
2023-10-01 21:43:57,351 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2023-10-01 21:43:57,351 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'MathJax_Size2' (MathJax_Size2-Regular.otf) normal normal 400 normal>) = 10.05
2023-10-01 21:43:57,351 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'dsrom10' (dsrom10.ttf) normal normal 400 normal>) = 10.05
2023-10-01 21:43:57,352 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Italic.otf) italic normal 400 normal>) = 11.05
2023-10-01 21:43:57,352 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Liberation Serif' (LiberationSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2023-10-01 21:43:57,352 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'FreeSans' (FreeSans.ttf) normal normal 400 normal>) = 10.05
2023-10-01 21:43:57,352 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Bitstream Vera Serif' (VeraSeBd.ttf) normal normal 700 normal>) = 10.335
2023-10-01 21:43:57,352 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Liberation Mono' (LiberationMono-Regular.ttf) normal normal 400 normal>) = 10.05
2023-10-01 21:43:57,352 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Quicksand' (Quicksand-Regular.ttf) normal normal 400 normal>) = 10.05
2023-10-01 21:43:57,352 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Bitstream Vera Sans' (VeraBI.ttf) oblique normal 700 normal>) = 2.244090909090909
2023-10-01 21:43:57,353 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lato' (Lato-LightItalic.ttf) italic normal 300 normal>) = 11.145
2023-10-01 21:43:57,353 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'FreeMono' (FreeMonoBold.ttf) normal normal 700 normal>) = 10.335
2023-10-01 21:43:57,353 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'MathJax_Math' (MathJax_Math-Italic.otf) italic normal 400 normal>) = 11.05
2023-10-01 21:43:57,353 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'D050000L' (D050000L.otf) normal normal 400 normal>) = 10.05
2023-10-01 21:43:57,353 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'FreeMono' (FreeMono.otf) normal normal 400 normal>) = 10.05
2023-10-01 21:43:57,353 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'FreeSans' (FreeSansBold.otf) normal normal 600 normal>) = 10.24
2023-10-01 21:43:57,353 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Liberation Mono' (LiberationMono-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-10-01 21:43:57,353 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Serif' (DejaVuSerifCondensed-Bold.ttf) normal normal 700 condensed>) = 10.535
2023-10-01 21:43:57,354 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'FreeMono' (FreeMonoOblique.ttf) oblique normal 400 normal>) = 11.05
2023-10-01 21:43:57,354 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Cantarell' (Cantarell-ExtraBold.otf) normal normal 800 normal>) = 10.43
2023-10-01 21:43:57,354 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'FreeSans' (FreeSans.otf) normal normal 400 normal>) = 10.05
2023-10-01 21:43:57,354 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'FreeSerif' (FreeSerifBold.otf) normal normal 700 normal>) = 10.335
2023-10-01 21:43:57,354 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-BoldOblique.otf) oblique normal 700 condensed>) = 11.535
2023-10-01 21:43:57,354 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Liberation Serif' (LiberationSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2023-10-01 21:43:57,354 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Sans' (DejaVuSansCondensed-Bold.ttf) normal normal 700 condensed>) = 0.5349999999999999
2023-10-01 21:43:57,355 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lato' (Lato-Bold.ttf) normal normal 700 normal>) = 10.335
2023-10-01 21:43:57,355 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Symbola' (Symbola_hint.ttf) normal normal 400 normal>) = 10.05
2023-10-01 21:43:57,355 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lato' (Lato-HairlineItalic.ttf) italic normal 100 normal>) = 11.335
2023-10-01 21:43:57,355 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Regular.otf) normal normal 400 normal>) = 10.05
2023-10-01 21:43:57,355 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lato' (Lato-Heavy.ttf) normal normal 800 normal>) = 10.43
2023-10-01 21:43:57,355 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
2023-10-01 21:43:57,355 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'P052' (P052-Roman.otf) normal normal 400 normal>) = 10.05
2023-10-01 21:43:57,356 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lato' (Lato-Semibold.ttf) normal normal 600 normal>) = 10.24
2023-10-01 21:43:57,356 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2023-10-01 21:43:57,356 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'MathJax_Script' (MathJax_Script-Regular.otf) normal normal 400 normal>) = 10.05
2023-10-01 21:43:57,356 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Mono' (NotoSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2023-10-01 21:43:57,356 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lato' (Lato-Hairline.ttf) normal normal 100 normal>) = 10.335
2023-10-01 21:43:57,356 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Nimbus Sans' (NimbusSans-BoldItalic.otf) italic normal 700 normal>) = 11.335
2023-10-01 21:43:57,356 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Liberation Sans' (LiberationSans-Italic.ttf) italic normal 400 normal>) = 11.05
2023-10-01 21:43:57,357 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lato' (Lato-Regular.ttf) normal normal 400 normal>) = 10.05
2023-10-01 21:43:57,357 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Bold.otf) normal normal 700 normal>) = 10.335
2023-10-01 21:43:57,357 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Bold.otf) normal normal 700 normal>) = 10.335
2023-10-01 21:43:57,357 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Liberation Sans' (LiberationSans-Bold.ttf) normal normal 700 normal>) = 10.335
2023-10-01 21:43:57,357 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Bitstream Vera Sans' (VeraIt.ttf) oblique normal 400 normal>) = 1.9590909090909092
2023-10-01 21:43:57,357 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Liberation Sans' (LiberationSans-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-10-01 21:43:57,357 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Cantarell' (Cantarell-Bold.otf) normal normal 700 normal>) = 10.335
2023-10-01 21:43:57,358 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Quicksand Light' (Quicksand-Light.ttf) normal normal 300 normal>) = 10.145
2023-10-01 21:43:57,358 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Nimbus Sans' (NimbusSans-Regular.otf) normal normal 400 normal>) = 10.05
2023-10-01 21:43:57,358 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Liberation Sans' (LiberationSans-Regular.ttf) normal normal 400 normal>) = 10.05
2023-10-01 21:43:57,358 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2023-10-01 21:43:57,358 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Liberation Serif' (LiberationSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2023-10-01 21:43:57,358 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'MathJax_Main' (MathJax_Main-Regular.otf) normal normal 400 normal>) = 10.05
2023-10-01 21:43:57,358 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'FreeMono' (FreeMonoOblique.otf) oblique normal 400 normal>) = 11.05
2023-10-01 21:43:57,358 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Nimbus Sans' (NimbusSans-Bold.otf) normal normal 700 normal>) = 10.335
2023-10-01 21:43:57,359 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Regular.ttf) normal normal 400 condensed>) = 10.25
2023-10-01 21:43:57,359 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'C059' (C059-Bold.otf) normal normal 700 normal>) = 10.335
2023-10-01 21:43:57,359 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'wasy10' (wasy10.ttf) normal normal 400 normal>) = 10.05
2023-10-01 21:43:57,359 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Bold.otf) normal normal 700 condensed>) = 10.535
2023-10-01 21:43:57,359 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Mono' (NotoSansMono-Regular.ttf) normal normal 400 normal>) = 10.05
2023-10-01 21:43:57,359 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lato' (Lato-Italic.ttf) italic normal 400 normal>) = 11.05
2023-10-01 21:43:57,359 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lato' (Lato-Thin.ttf) normal normal 200 normal>) = 10.24
2023-10-01 21:43:57,360 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Standard Symbols PS' (StandardSymbolsPS.otf) normal normal 400 normal>) = 10.05
2023-10-01 21:43:57,360 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Liberation Serif' (LiberationSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2023-10-01 21:43:57,360 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Liberation Sans' (LiberationSans-Regular.ttf) normal normal 400 normal>) = 10.05
2023-10-01 21:43:57,360 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Bold.ttf) normal normal 700 condensed>) = 10.535
2023-10-01 21:43:57,360 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'URW Gothic' (URWGothic-Demi.otf) normal normal 600 normal>) = 10.24
2023-10-01 21:43:57,360 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Droid Sans Fallback' (DroidSansFallbackFull.ttf) normal normal 400 normal>) = 10.05
2023-10-01 21:43:57,360 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'FreeSans' (FreeSansOblique.otf) oblique normal 400 normal>) = 11.05
2023-10-01 21:43:57,361 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Liberation Mono' (LiberationMono-Bold.ttf) normal normal 700 normal>) = 10.335
2023-10-01 21:43:57,361 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Serif' (DejaVuSerifCondensed-Italic.ttf) italic normal 400 condensed>) = 11.25
2023-10-01 21:43:57,361 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Liberation Mono' (LiberationMono-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-10-01 21:43:57,361 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Italic.otf) italic normal 400 normal>) = 11.05
2023-10-01 21:43:57,361 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-BoldItalic.ttf) italic normal 700 condensed>) = 11.535
2023-10-01 21:43:57,361 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'FreeSerif' (FreeSerif.ttf) normal normal 400 normal>) = 10.05
2023-10-01 21:43:57,361 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2023-10-01 21:43:57,361 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.05
2023-10-01 21:43:57,362 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'MathJax_AMS' (MathJax_AMS-Regular.otf) normal normal 400 normal>) = 10.05
2023-10-01 21:43:57,362 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Liberation Serif' (LiberationSerif-Regular.ttf) normal normal 400 normal>) = 10.05
2023-10-01 21:43:57,362 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'stmary10' (stmary10.ttf) normal normal 400 normal>) = 10.05
2023-10-01 21:43:57,362 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Sans' (DejaVuSansCondensed-Oblique.ttf) oblique normal 400 condensed>) = 1.25
2023-10-01 21:43:57,362 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lato' (Lato-ThinItalic.ttf) italic normal 200 normal>) = 11.24
2023-10-01 21:43:57,362 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'MathJax_Main' (MathJax_Main-Italic.otf) italic normal 400 normal>) = 11.05
2023-10-01 21:43:57,362 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2023-10-01 21:43:57,363 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'FreeSans' (FreeSansOblique.ttf) oblique normal 400 normal>) = 11.05
2023-10-01 21:43:57,363 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'FreeSerif' (FreeSerifBoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-10-01 21:43:57,363 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'MathJax_Main' (MathJax_Main-Bold.otf) normal normal 700 normal>) = 10.335
2023-10-01 21:43:57,363 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'MathJax_WinIE6' (MathJax_WinIE6-Regular.otf) normal normal 400 normal>) = 10.05
2023-10-01 21:43:57,363 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-10-01 21:43:57,363 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'FontAwesome' (FontAwesome.otf) normal normal 400 normal>) = 10.05
2023-10-01 21:43:57,363 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Bitstream Vera Sans Mono' (VeraMoIt.ttf) oblique normal 400 normal>) = 11.05
2023-10-01 21:43:57,364 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-10-01 21:43:57,364 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Liberation Serif' (LiberationSerif-Regular.ttf) normal normal 400 normal>) = 10.05
2023-10-01 21:43:57,364 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Oblique.otf) oblique normal 400 condensed>) = 11.25
2023-10-01 21:43:57,364 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Cantarell' (Cantarell-Regular.otf) normal normal 400 normal>) = 10.05
2023-10-01 21:43:57,364 - matplotlib.font_manager - DEBUG - findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=14.0 to DejaVu Sans ('/home/kai/.local/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf') with score of 0.050000.
2023-10-01 21:43:57,509 - matplotlib.font_manager - DEBUG - findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=16.8.
2023-10-01 21:43:57,509 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2023-10-01 21:43:57,509 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 10.05
2023-10-01 21:43:57,510 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2023-10-01 21:43:57,510 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2023-10-01 21:43:57,510 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 10.05
2023-10-01 21:43:57,510 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2023-10-01 21:43:57,510 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.335
2023-10-01 21:43:57,510 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 10.05
2023-10-01 21:43:57,510 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-10-01 21:43:57,511 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 10.05
2023-10-01 21:43:57,511 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2023-10-01 21:43:57,511 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2023-10-01 21:43:57,511 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.335
2023-10-01 21:43:57,511 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-10-01 21:43:57,511 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.335
2023-10-01 21:43:57,511 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.05
2023-10-01 21:43:57,512 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.335
2023-10-01 21:43:57,512 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2023-10-01 21:43:57,512 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-10-01 21:43:57,512 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2023-10-01 21:43:57,512 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2023-10-01 21:43:57,512 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 10.05
2023-10-01 21:43:57,512 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.335
2023-10-01 21:43:57,513 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2023-10-01 21:43:57,513 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2023-10-01 21:43:57,513 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2023-10-01 21:43:57,513 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.335
2023-10-01 21:43:57,513 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
2023-10-01 21:43:57,513 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 10.05
2023-10-01 21:43:57,513 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.335
2023-10-01 21:43:57,513 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2023-10-01 21:43:57,514 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 0.33499999999999996
2023-10-01 21:43:57,514 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 1.335
2023-10-01 21:43:57,514 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2023-10-01 21:43:57,514 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 10.05
2023-10-01 21:43:57,514 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2023-10-01 21:43:57,514 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2023-10-01 21:43:57,514 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.335
2023-10-01 21:43:57,515 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'MathJax_Typewriter' (MathJax_Typewriter-Regular.otf) normal normal 400 normal>) = 10.05
2023-10-01 21:43:57,515 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'MathJax_Size3' (MathJax_Size3-Regular.otf) normal normal 400 normal>) = 10.05
2023-10-01 21:43:57,515 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'FreeSans' (FreeSansBold.ttf) normal normal 600 normal>) = 10.24
2023-10-01 21:43:57,515 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lato' (Lato-SemiboldItalic.ttf) italic normal 600 normal>) = 11.24
2023-10-01 21:43:57,515 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Quicksand' (Quicksand-Bold.ttf) normal normal 700 normal>) = 10.335
2023-10-01 21:43:57,515 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'FreeMono' (FreeMonoBold.otf) normal normal 700 normal>) = 10.335
2023-10-01 21:43:57,515 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lato' (Lato-BlackItalic.ttf) italic normal 900 normal>) = 11.525
2023-10-01 21:43:57,515 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'C059' (C059-Italic.otf) italic normal 400 normal>) = 11.05
2023-10-01 21:43:57,516 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'MathJax_Math' (MathJax_Math-Regular.otf) normal normal 400 normal>) = 10.05
2023-10-01 21:43:57,516 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Math TeX Gyre' (DejaVuMathTeXGyre.ttf) normal normal 400 normal>) = 10.05
2023-10-01 21:43:57,516 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'FreeSerif' (FreeSerifItalic.otf) italic normal 400 normal>) = 11.05
2023-10-01 21:43:57,516 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'URW Bookman' (URWBookman-Demi.otf) normal normal 600 normal>) = 10.24
2023-10-01 21:43:57,516 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'OpenSymbol' (opens___.ttf) normal normal 400 normal>) = 10.05
2023-10-01 21:43:57,516 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Liberation Mono' (LiberationMono-Italic.ttf) italic normal 400 normal>) = 11.05
2023-10-01 21:43:57,516 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'FreeMono' (FreeMonoBoldOblique.otf) oblique normal 700 normal>) = 11.335
2023-10-01 21:43:57,517 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Bitstream Vera Sans Mono' (VeraMoBI.ttf) oblique normal 700 normal>) = 11.335
2023-10-01 21:43:57,517 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'MathJax_Fraktur' (MathJax_Fraktur-Bold.otf) normal normal 700 normal>) = 10.335
2023-10-01 21:43:57,517 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Sans' (DejaVuSansCondensed-BoldOblique.ttf) oblique normal 700 condensed>) = 1.535
2023-10-01 21:43:57,517 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'FreeMono' (FreeMono.ttf) normal normal 400 normal>) = 10.05
2023-10-01 21:43:57,517 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lato' (Lato-Medium.ttf) normal normal 500 normal>) = 10.145
2023-10-01 21:43:57,517 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Bitstream Vera Sans Mono' (VeraMono.ttf) normal normal 400 normal>) = 10.05
2023-10-01 21:43:57,517 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'MathJax_Vector-Bold' (MathJax_Vector-Bold.otf) normal normal 500 normal>) = 10.145
2023-10-01 21:43:57,517 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Liberation Sans' (LiberationSans-Bold.ttf) normal normal 700 normal>) = 10.335
2023-10-01 21:43:57,518 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-BoldItalic.otf) italic normal 700 normal>) = 11.335
2023-10-01 21:43:57,518 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'eufm10' (eufm10.ttf) normal normal 400 normal>) = 10.05
2023-10-01 21:43:57,518 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'P052' (P052-Bold.otf) normal normal 700 normal>) = 10.335
2023-10-01 21:43:57,518 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'FreeSans' (FreeSansBoldOblique.otf) oblique normal 600 normal>) = 11.24
2023-10-01 21:43:57,518 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'MathJax_Size4' (MathJax_Size4-Regular.otf) normal normal 400 normal>) = 10.05
2023-10-01 21:43:57,518 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Italic.ttf) italic normal 400 condensed>) = 11.25
2023-10-01 21:43:57,518 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'FontAwesome' (fontawesome-webfont.ttf) normal normal 400 normal>) = 10.05
2023-10-01 21:43:57,519 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2023-10-01 21:43:57,519 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Nimbus Sans' (NimbusSans-Italic.otf) italic normal 400 normal>) = 11.05
2023-10-01 21:43:57,519 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'C059' (C059-BdIta.otf) italic normal 700 normal>) = 11.335
2023-10-01 21:43:57,519 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Quicksand Medium' (Quicksand-Medium.ttf) normal normal 500 normal>) = 10.145
2023-10-01 21:43:57,519 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Liberation Serif' (LiberationSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-10-01 21:43:57,519 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Bitstream Vera Sans Mono' (VeraMoBd.ttf) normal normal 700 normal>) = 10.335
2023-10-01 21:43:57,519 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2023-10-01 21:43:57,519 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Liberation Mono' (LiberationMono-Italic.ttf) italic normal 400 normal>) = 11.05
2023-10-01 21:43:57,520 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'MathJax_Fraktur' (MathJax_Fraktur-Regular.otf) normal normal 400 normal>) = 10.05
2023-10-01 21:43:57,520 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'P052' (P052-BoldItalic.otf) italic normal 700 normal>) = 11.335
2023-10-01 21:43:57,520 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lato' (Lato-MediumItalic.ttf) italic normal 500 normal>) = 11.145
2023-10-01 21:43:57,520 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'elusiveicons' (elusiveicons-webfont.ttf) normal normal 500 normal>) = 10.145
2023-10-01 21:43:57,520 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Regular.otf) normal normal 400 normal>) = 10.05
2023-10-01 21:43:57,520 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Bitstream Vera Serif' (VeraSe.ttf) normal normal 400 normal>) = 10.05
2023-10-01 21:43:57,520 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'rsfs10' (rsfs10.ttf) italic normal 400 normal>) = 11.05
2023-10-01 21:43:57,521 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Liberation Sans' (LiberationSans-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-10-01 21:43:57,521 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'FreeSans' (FreeSansBoldOblique.ttf) oblique normal 600 normal>) = 11.24
2023-10-01 21:43:57,521 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Liberation Sans' (LiberationSans-Italic.ttf) italic normal 400 normal>) = 11.05
2023-10-01 21:43:57,521 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Z003' (Z003-MediumItalic.otf) italic normal 500 normal>) = 11.145
2023-10-01 21:43:57,521 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'C059' (C059-Roman.otf) normal normal 400 normal>) = 10.05
2023-10-01 21:43:57,521 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'esint10' (esint10.ttf) normal normal 400 normal>) = 10.05
2023-10-01 21:43:57,521 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2023-10-01 21:43:57,521 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'URW Bookman' (URWBookman-Light.otf) normal normal 300 normal>) = 10.145
2023-10-01 21:43:57,522 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 1.335
2023-10-01 21:43:57,522 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'URW Gothic' (URWGothic-DemiOblique.otf) oblique normal 600 normal>) = 11.24
2023-10-01 21:43:57,522 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'FreeSerif' (FreeSerifBoldItalic.otf) italic normal 700 normal>) = 11.335
2023-10-01 21:43:57,522 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'URW Gothic' (URWGothic-Book.otf) normal normal 400 normal>) = 10.05
2023-10-01 21:43:57,522 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'P052' (P052-Italic.otf) italic normal 400 normal>) = 11.05
2023-10-01 21:43:57,522 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lato' (Lato-Light.ttf) normal normal 300 normal>) = 10.145
2023-10-01 21:43:57,522 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'MathJax_Caligraphic' (MathJax_Caligraphic-Regular.otf) normal normal 400 normal>) = 10.05
2023-10-01 21:43:57,523 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lato' (Lato-HeavyItalic.ttf) italic normal 800 normal>) = 11.43
2023-10-01 21:43:57,523 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'msbm10' (msbm10.ttf) normal normal 400 normal>) = 10.05
2023-10-01 21:43:57,523 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-10-01 21:43:57,523 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Liberation Serif' (LiberationSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-10-01 21:43:57,523 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Cantarell' (Cantarell-Thin.otf) normal normal 100 normal>) = 10.335
2023-10-01 21:43:57,523 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'MathJax_WinChrome' (MathJax_WinChrome-Regular.otf) normal normal 400 normal>) = 10.05
2023-10-01 21:43:57,523 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'FreeSerif' (FreeSerifBold.ttf) normal normal 700 normal>) = 10.335
2023-10-01 21:43:57,523 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Bitstream Vera Sans' (VeraBd.ttf) normal normal 700 normal>) = 1.2440909090909091
2023-10-01 21:43:57,523 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Mono' (NotoMono-Regular.ttf) normal normal 400 normal>) = 10.05
2023-10-01 21:43:57,524 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Bitstream Vera Sans' (Vera.ttf) normal normal 400 normal>) = 0.9590909090909092
2023-10-01 21:43:57,524 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'msam10' (msam10.ttf) normal normal 400 normal>) = 10.05
2023-10-01 21:43:57,524 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lato' (Lato-Black.ttf) normal normal 900 normal>) = 10.525
2023-10-01 21:43:57,524 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 0.33499999999999996
2023-10-01 21:43:57,524 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'MathJax_Vector' (MathJax_Vector-Regular.otf) normal normal 500 normal>) = 10.145
2023-10-01 21:43:57,524 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'FreeSerif' (FreeSerifItalic.ttf) italic normal 400 normal>) = 11.05
2023-10-01 21:43:57,524 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'FreeMono' (FreeMonoBoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-10-01 21:43:57,525 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Regular.otf) normal normal 400 normal>) = 10.05
2023-10-01 21:43:57,525 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'URW Gothic' (URWGothic-BookOblique.otf) oblique normal 400 normal>) = 11.05
2023-10-01 21:43:57,525 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Italic.otf) italic normal 400 normal>) = 11.05
2023-10-01 21:43:57,525 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lato' (Lato-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-10-01 21:43:57,525 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Sans' (DejaVuSans-ExtraLight.ttf) normal normal 200 normal>) = 0.24
2023-10-01 21:43:57,525 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'URW Bookman' (URWBookman-LightItalic.otf) italic normal 300 normal>) = 11.145
2023-10-01 21:43:57,525 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Liberation Mono' (LiberationMono-Regular.ttf) normal normal 400 normal>) = 10.05
2023-10-01 21:43:57,526 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Cantarell' (Cantarell-Light.otf) normal normal 300 normal>) = 10.145
2023-10-01 21:43:57,526 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'URW Bookman' (URWBookman-DemiItalic.otf) italic normal 600 normal>) = 11.24
2023-10-01 21:43:57,526 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'MathJax_Size1' (MathJax_Size1-Regular.otf) normal normal 400 normal>) = 10.05
2023-10-01 21:43:57,526 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Liberation Mono' (LiberationMono-Bold.ttf) normal normal 700 normal>) = 10.335
2023-10-01 21:43:57,526 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2023-10-01 21:43:57,526 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Serif' (DejaVuSerifCondensed.ttf) normal normal 400 condensed>) = 10.25
2023-10-01 21:43:57,526 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'MathJax_Math' (MathJax_Math-BoldItalic.otf) italic normal 700 normal>) = 11.335
2023-10-01 21:43:57,526 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Regular.otf) normal normal 400 condensed>) = 10.25
2023-10-01 21:43:57,527 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Sans' (DejaVuSansCondensed.ttf) normal normal 400 condensed>) = 0.25
2023-10-01 21:43:57,527 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'MathJax_Caligraphic' (MathJax_Caligraphic-Bold.otf) normal normal 700 normal>) = 10.335
2023-10-01 21:43:57,527 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Bold.otf) normal normal 700 normal>) = 10.335
2023-10-01 21:43:57,527 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'FreeSerif' (FreeSerif.otf) normal normal 400 normal>) = 10.05
2023-10-01 21:43:57,527 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Serif' (DejaVuSerifCondensed-BoldItalic.ttf) italic normal 700 condensed>) = 11.535
2023-10-01 21:43:57,527 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Nimbus Roman' (NimbusRoman-BoldItalic.otf) italic normal 700 normal>) = 11.335
2023-10-01 21:43:57,527 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2023-10-01 21:43:57,528 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'MathJax_Size2' (MathJax_Size2-Regular.otf) normal normal 400 normal>) = 10.05
2023-10-01 21:43:57,528 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'dsrom10' (dsrom10.ttf) normal normal 400 normal>) = 10.05
2023-10-01 21:43:57,528 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Italic.otf) italic normal 400 normal>) = 11.05
2023-10-01 21:43:57,528 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Liberation Serif' (LiberationSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2023-10-01 21:43:57,528 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'FreeSans' (FreeSans.ttf) normal normal 400 normal>) = 10.05
2023-10-01 21:43:57,528 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Bitstream Vera Serif' (VeraSeBd.ttf) normal normal 700 normal>) = 10.335
2023-10-01 21:43:57,528 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Liberation Mono' (LiberationMono-Regular.ttf) normal normal 400 normal>) = 10.05
2023-10-01 21:43:57,528 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Quicksand' (Quicksand-Regular.ttf) normal normal 400 normal>) = 10.05
2023-10-01 21:43:57,529 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Bitstream Vera Sans' (VeraBI.ttf) oblique normal 700 normal>) = 2.244090909090909
2023-10-01 21:43:57,529 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lato' (Lato-LightItalic.ttf) italic normal 300 normal>) = 11.145
2023-10-01 21:43:57,529 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'FreeMono' (FreeMonoBold.ttf) normal normal 700 normal>) = 10.335
2023-10-01 21:43:57,529 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'MathJax_Math' (MathJax_Math-Italic.otf) italic normal 400 normal>) = 11.05
2023-10-01 21:43:57,529 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'D050000L' (D050000L.otf) normal normal 400 normal>) = 10.05
2023-10-01 21:43:57,529 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'FreeMono' (FreeMono.otf) normal normal 400 normal>) = 10.05
2023-10-01 21:43:57,529 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'FreeSans' (FreeSansBold.otf) normal normal 600 normal>) = 10.24
2023-10-01 21:43:57,530 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Liberation Mono' (LiberationMono-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-10-01 21:43:57,530 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Serif' (DejaVuSerifCondensed-Bold.ttf) normal normal 700 condensed>) = 10.535
2023-10-01 21:43:57,530 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'FreeMono' (FreeMonoOblique.ttf) oblique normal 400 normal>) = 11.05
2023-10-01 21:43:57,530 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Cantarell' (Cantarell-ExtraBold.otf) normal normal 800 normal>) = 10.43
2023-10-01 21:43:57,530 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'FreeSans' (FreeSans.otf) normal normal 400 normal>) = 10.05
2023-10-01 21:43:57,530 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'FreeSerif' (FreeSerifBold.otf) normal normal 700 normal>) = 10.335
2023-10-01 21:43:57,530 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-BoldOblique.otf) oblique normal 700 condensed>) = 11.535
2023-10-01 21:43:57,531 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Liberation Serif' (LiberationSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2023-10-01 21:43:57,531 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Sans' (DejaVuSansCondensed-Bold.ttf) normal normal 700 condensed>) = 0.5349999999999999
2023-10-01 21:43:57,531 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lato' (Lato-Bold.ttf) normal normal 700 normal>) = 10.335
2023-10-01 21:43:57,531 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Symbola' (Symbola_hint.ttf) normal normal 400 normal>) = 10.05
2023-10-01 21:43:57,531 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lato' (Lato-HairlineItalic.ttf) italic normal 100 normal>) = 11.335
2023-10-01 21:43:57,531 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Regular.otf) normal normal 400 normal>) = 10.05
2023-10-01 21:43:57,531 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lato' (Lato-Heavy.ttf) normal normal 800 normal>) = 10.43
2023-10-01 21:43:57,531 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
2023-10-01 21:43:57,532 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'P052' (P052-Roman.otf) normal normal 400 normal>) = 10.05
2023-10-01 21:43:57,532 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lato' (Lato-Semibold.ttf) normal normal 600 normal>) = 10.24
2023-10-01 21:43:57,532 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2023-10-01 21:43:57,532 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'MathJax_Script' (MathJax_Script-Regular.otf) normal normal 400 normal>) = 10.05
2023-10-01 21:43:57,532 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Mono' (NotoSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2023-10-01 21:43:57,532 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lato' (Lato-Hairline.ttf) normal normal 100 normal>) = 10.335
2023-10-01 21:43:57,532 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Nimbus Sans' (NimbusSans-BoldItalic.otf) italic normal 700 normal>) = 11.335
2023-10-01 21:43:57,533 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Liberation Sans' (LiberationSans-Italic.ttf) italic normal 400 normal>) = 11.05
2023-10-01 21:43:57,533 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lato' (Lato-Regular.ttf) normal normal 400 normal>) = 10.05
2023-10-01 21:43:57,533 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Bold.otf) normal normal 700 normal>) = 10.335
2023-10-01 21:43:57,533 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Bold.otf) normal normal 700 normal>) = 10.335
2023-10-01 21:43:57,533 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Liberation Sans' (LiberationSans-Bold.ttf) normal normal 700 normal>) = 10.335
2023-10-01 21:43:57,533 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Bitstream Vera Sans' (VeraIt.ttf) oblique normal 400 normal>) = 1.9590909090909092
2023-10-01 21:43:57,533 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Liberation Sans' (LiberationSans-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-10-01 21:43:57,533 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Cantarell' (Cantarell-Bold.otf) normal normal 700 normal>) = 10.335
2023-10-01 21:43:57,534 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Quicksand Light' (Quicksand-Light.ttf) normal normal 300 normal>) = 10.145
2023-10-01 21:43:57,534 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Nimbus Sans' (NimbusSans-Regular.otf) normal normal 400 normal>) = 10.05
2023-10-01 21:43:57,534 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Liberation Sans' (LiberationSans-Regular.ttf) normal normal 400 normal>) = 10.05
2023-10-01 21:43:57,534 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2023-10-01 21:43:57,534 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Liberation Serif' (LiberationSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2023-10-01 21:43:57,534 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'MathJax_Main' (MathJax_Main-Regular.otf) normal normal 400 normal>) = 10.05
2023-10-01 21:43:57,534 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'FreeMono' (FreeMonoOblique.otf) oblique normal 400 normal>) = 11.05
2023-10-01 21:43:57,535 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Nimbus Sans' (NimbusSans-Bold.otf) normal normal 700 normal>) = 10.335
2023-10-01 21:43:57,535 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Regular.ttf) normal normal 400 condensed>) = 10.25
2023-10-01 21:43:57,535 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'C059' (C059-Bold.otf) normal normal 700 normal>) = 10.335
2023-10-01 21:43:57,535 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'wasy10' (wasy10.ttf) normal normal 400 normal>) = 10.05
2023-10-01 21:43:57,535 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Bold.otf) normal normal 700 condensed>) = 10.535
2023-10-01 21:43:57,535 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Mono' (NotoSansMono-Regular.ttf) normal normal 400 normal>) = 10.05
2023-10-01 21:43:57,535 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lato' (Lato-Italic.ttf) italic normal 400 normal>) = 11.05
2023-10-01 21:43:57,536 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lato' (Lato-Thin.ttf) normal normal 200 normal>) = 10.24
2023-10-01 21:43:57,536 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Standard Symbols PS' (StandardSymbolsPS.otf) normal normal 400 normal>) = 10.05
2023-10-01 21:43:57,536 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Liberation Serif' (LiberationSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2023-10-01 21:43:57,536 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Liberation Sans' (LiberationSans-Regular.ttf) normal normal 400 normal>) = 10.05
2023-10-01 21:43:57,536 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Bold.ttf) normal normal 700 condensed>) = 10.535
2023-10-01 21:43:57,536 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'URW Gothic' (URWGothic-Demi.otf) normal normal 600 normal>) = 10.24
2023-10-01 21:43:57,536 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Droid Sans Fallback' (DroidSansFallbackFull.ttf) normal normal 400 normal>) = 10.05
2023-10-01 21:43:57,536 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'FreeSans' (FreeSansOblique.otf) oblique normal 400 normal>) = 11.05
2023-10-01 21:43:57,537 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Liberation Mono' (LiberationMono-Bold.ttf) normal normal 700 normal>) = 10.335
2023-10-01 21:43:57,537 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Serif' (DejaVuSerifCondensed-Italic.ttf) italic normal 400 condensed>) = 11.25
2023-10-01 21:43:57,537 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Liberation Mono' (LiberationMono-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-10-01 21:43:57,537 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Italic.otf) italic normal 400 normal>) = 11.05
2023-10-01 21:43:57,537 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-BoldItalic.ttf) italic normal 700 condensed>) = 11.535
2023-10-01 21:43:57,537 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'FreeSerif' (FreeSerif.ttf) normal normal 400 normal>) = 10.05
2023-10-01 21:43:57,537 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2023-10-01 21:43:57,537 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.05
2023-10-01 21:43:57,538 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'MathJax_AMS' (MathJax_AMS-Regular.otf) normal normal 400 normal>) = 10.05
2023-10-01 21:43:57,538 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Liberation Serif' (LiberationSerif-Regular.ttf) normal normal 400 normal>) = 10.05
2023-10-01 21:43:57,538 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'stmary10' (stmary10.ttf) normal normal 400 normal>) = 10.05
2023-10-01 21:43:57,538 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Sans' (DejaVuSansCondensed-Oblique.ttf) oblique normal 400 condensed>) = 1.25
2023-10-01 21:43:57,538 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lato' (Lato-ThinItalic.ttf) italic normal 200 normal>) = 11.24
2023-10-01 21:43:57,538 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'MathJax_Main' (MathJax_Main-Italic.otf) italic normal 400 normal>) = 11.05
2023-10-01 21:43:57,538 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2023-10-01 21:43:57,539 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'FreeSans' (FreeSansOblique.ttf) oblique normal 400 normal>) = 11.05
2023-10-01 21:43:57,539 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'FreeSerif' (FreeSerifBoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-10-01 21:43:57,539 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'MathJax_Main' (MathJax_Main-Bold.otf) normal normal 700 normal>) = 10.335
2023-10-01 21:43:57,539 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'MathJax_WinIE6' (MathJax_WinIE6-Regular.otf) normal normal 400 normal>) = 10.05
2023-10-01 21:43:57,539 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-10-01 21:43:57,539 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'FontAwesome' (FontAwesome.otf) normal normal 400 normal>) = 10.05
2023-10-01 21:43:57,539 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Bitstream Vera Sans Mono' (VeraMoIt.ttf) oblique normal 400 normal>) = 11.05
2023-10-01 21:43:57,540 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-10-01 21:43:57,540 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Liberation Serif' (LiberationSerif-Regular.ttf) normal normal 400 normal>) = 10.05
2023-10-01 21:43:57,540 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Oblique.otf) oblique normal 400 condensed>) = 11.25
2023-10-01 21:43:57,540 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Cantarell' (Cantarell-Regular.otf) normal normal 400 normal>) = 10.05
2023-10-01 21:43:57,540 - matplotlib.font_manager - DEBUG - findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=16.8 to DejaVu Sans ('/home/kai/.local/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf') with score of 0.050000.
2023-10-01 21:43:57,580 - matplotlib.font_manager - DEBUG - findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=20.16.
2023-10-01 21:43:57,580 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2023-10-01 21:43:57,581 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 10.05
2023-10-01 21:43:57,581 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2023-10-01 21:43:57,581 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2023-10-01 21:43:57,581 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 10.05
2023-10-01 21:43:57,581 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2023-10-01 21:43:57,581 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.335
2023-10-01 21:43:57,581 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 10.05
2023-10-01 21:43:57,582 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-10-01 21:43:57,582 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 10.05
2023-10-01 21:43:57,582 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2023-10-01 21:43:57,582 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2023-10-01 21:43:57,582 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.335
2023-10-01 21:43:57,582 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-10-01 21:43:57,582 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.335
2023-10-01 21:43:57,582 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.05
2023-10-01 21:43:57,583 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.335
2023-10-01 21:43:57,583 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2023-10-01 21:43:57,583 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-10-01 21:43:57,583 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2023-10-01 21:43:57,583 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2023-10-01 21:43:57,583 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 10.05
2023-10-01 21:43:57,583 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.335
2023-10-01 21:43:57,584 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2023-10-01 21:43:57,584 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2023-10-01 21:43:57,584 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2023-10-01 21:43:57,584 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.335
2023-10-01 21:43:57,584 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
2023-10-01 21:43:57,584 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 10.05
2023-10-01 21:43:57,584 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.335
2023-10-01 21:43:57,585 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2023-10-01 21:43:57,585 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 0.33499999999999996
2023-10-01 21:43:57,585 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 1.335
2023-10-01 21:43:57,585 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2023-10-01 21:43:57,585 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 10.05
2023-10-01 21:43:57,585 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2023-10-01 21:43:57,585 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2023-10-01 21:43:57,585 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.335
2023-10-01 21:43:57,586 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'MathJax_Typewriter' (MathJax_Typewriter-Regular.otf) normal normal 400 normal>) = 10.05
2023-10-01 21:43:57,586 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'MathJax_Size3' (MathJax_Size3-Regular.otf) normal normal 400 normal>) = 10.05
2023-10-01 21:43:57,586 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'FreeSans' (FreeSansBold.ttf) normal normal 600 normal>) = 10.24
2023-10-01 21:43:57,586 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lato' (Lato-SemiboldItalic.ttf) italic normal 600 normal>) = 11.24
2023-10-01 21:43:57,586 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Quicksand' (Quicksand-Bold.ttf) normal normal 700 normal>) = 10.335
2023-10-01 21:43:57,586 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'FreeMono' (FreeMonoBold.otf) normal normal 700 normal>) = 10.335
2023-10-01 21:43:57,586 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lato' (Lato-BlackItalic.ttf) italic normal 900 normal>) = 11.525
2023-10-01 21:43:57,587 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'C059' (C059-Italic.otf) italic normal 400 normal>) = 11.05
2023-10-01 21:43:57,587 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'MathJax_Math' (MathJax_Math-Regular.otf) normal normal 400 normal>) = 10.05
2023-10-01 21:43:57,587 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Math TeX Gyre' (DejaVuMathTeXGyre.ttf) normal normal 400 normal>) = 10.05
2023-10-01 21:43:57,587 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'FreeSerif' (FreeSerifItalic.otf) italic normal 400 normal>) = 11.05
2023-10-01 21:43:57,587 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'URW Bookman' (URWBookman-Demi.otf) normal normal 600 normal>) = 10.24
2023-10-01 21:43:57,587 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'OpenSymbol' (opens___.ttf) normal normal 400 normal>) = 10.05
2023-10-01 21:43:57,587 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Liberation Mono' (LiberationMono-Italic.ttf) italic normal 400 normal>) = 11.05
2023-10-01 21:43:57,587 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'FreeMono' (FreeMonoBoldOblique.otf) oblique normal 700 normal>) = 11.335
2023-10-01 21:43:57,588 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Bitstream Vera Sans Mono' (VeraMoBI.ttf) oblique normal 700 normal>) = 11.335
2023-10-01 21:43:57,588 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'MathJax_Fraktur' (MathJax_Fraktur-Bold.otf) normal normal 700 normal>) = 10.335
2023-10-01 21:43:57,588 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Sans' (DejaVuSansCondensed-BoldOblique.ttf) oblique normal 700 condensed>) = 1.535
2023-10-01 21:43:57,588 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'FreeMono' (FreeMono.ttf) normal normal 400 normal>) = 10.05
2023-10-01 21:43:57,588 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lato' (Lato-Medium.ttf) normal normal 500 normal>) = 10.145
2023-10-01 21:43:57,588 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Bitstream Vera Sans Mono' (VeraMono.ttf) normal normal 400 normal>) = 10.05
2023-10-01 21:43:57,588 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'MathJax_Vector-Bold' (MathJax_Vector-Bold.otf) normal normal 500 normal>) = 10.145
2023-10-01 21:43:57,589 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Liberation Sans' (LiberationSans-Bold.ttf) normal normal 700 normal>) = 10.335
2023-10-01 21:43:57,589 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-BoldItalic.otf) italic normal 700 normal>) = 11.335
2023-10-01 21:43:57,589 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'eufm10' (eufm10.ttf) normal normal 400 normal>) = 10.05
2023-10-01 21:43:57,589 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'P052' (P052-Bold.otf) normal normal 700 normal>) = 10.335
2023-10-01 21:43:57,589 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'FreeSans' (FreeSansBoldOblique.otf) oblique normal 600 normal>) = 11.24
2023-10-01 21:43:57,589 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'MathJax_Size4' (MathJax_Size4-Regular.otf) normal normal 400 normal>) = 10.05
2023-10-01 21:43:57,589 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Italic.ttf) italic normal 400 condensed>) = 11.25
2023-10-01 21:43:57,590 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'FontAwesome' (fontawesome-webfont.ttf) normal normal 400 normal>) = 10.05
2023-10-01 21:43:57,590 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2023-10-01 21:43:57,590 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Nimbus Sans' (NimbusSans-Italic.otf) italic normal 400 normal>) = 11.05
2023-10-01 21:43:57,590 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'C059' (C059-BdIta.otf) italic normal 700 normal>) = 11.335
2023-10-01 21:43:57,590 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Quicksand Medium' (Quicksand-Medium.ttf) normal normal 500 normal>) = 10.145
2023-10-01 21:43:57,590 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Liberation Serif' (LiberationSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-10-01 21:43:57,590 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Bitstream Vera Sans Mono' (VeraMoBd.ttf) normal normal 700 normal>) = 10.335
2023-10-01 21:43:57,590 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2023-10-01 21:43:57,591 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Liberation Mono' (LiberationMono-Italic.ttf) italic normal 400 normal>) = 11.05
2023-10-01 21:43:57,591 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'MathJax_Fraktur' (MathJax_Fraktur-Regular.otf) normal normal 400 normal>) = 10.05
2023-10-01 21:43:57,591 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'P052' (P052-BoldItalic.otf) italic normal 700 normal>) = 11.335
2023-10-01 21:43:57,591 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lato' (Lato-MediumItalic.ttf) italic normal 500 normal>) = 11.145
2023-10-01 21:43:57,591 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'elusiveicons' (elusiveicons-webfont.ttf) normal normal 500 normal>) = 10.145
2023-10-01 21:43:57,591 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Regular.otf) normal normal 400 normal>) = 10.05
2023-10-01 21:43:57,591 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Bitstream Vera Serif' (VeraSe.ttf) normal normal 400 normal>) = 10.05
2023-10-01 21:43:57,592 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'rsfs10' (rsfs10.ttf) italic normal 400 normal>) = 11.05
2023-10-01 21:43:57,592 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Liberation Sans' (LiberationSans-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-10-01 21:43:57,592 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'FreeSans' (FreeSansBoldOblique.ttf) oblique normal 600 normal>) = 11.24
2023-10-01 21:43:57,592 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Liberation Sans' (LiberationSans-Italic.ttf) italic normal 400 normal>) = 11.05
2023-10-01 21:43:57,592 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Z003' (Z003-MediumItalic.otf) italic normal 500 normal>) = 11.145
2023-10-01 21:43:57,592 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'C059' (C059-Roman.otf) normal normal 400 normal>) = 10.05
2023-10-01 21:43:57,592 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'esint10' (esint10.ttf) normal normal 400 normal>) = 10.05
2023-10-01 21:43:57,593 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2023-10-01 21:43:57,593 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'URW Bookman' (URWBookman-Light.otf) normal normal 300 normal>) = 10.145
2023-10-01 21:43:57,593 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 1.335
2023-10-01 21:43:57,593 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'URW Gothic' (URWGothic-DemiOblique.otf) oblique normal 600 normal>) = 11.24
2023-10-01 21:43:57,593 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'FreeSerif' (FreeSerifBoldItalic.otf) italic normal 700 normal>) = 11.335
2023-10-01 21:43:57,593 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'URW Gothic' (URWGothic-Book.otf) normal normal 400 normal>) = 10.05
2023-10-01 21:43:57,593 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'P052' (P052-Italic.otf) italic normal 400 normal>) = 11.05
2023-10-01 21:43:57,593 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lato' (Lato-Light.ttf) normal normal 300 normal>) = 10.145
2023-10-01 21:43:57,594 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'MathJax_Caligraphic' (MathJax_Caligraphic-Regular.otf) normal normal 400 normal>) = 10.05
2023-10-01 21:43:57,594 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lato' (Lato-HeavyItalic.ttf) italic normal 800 normal>) = 11.43
2023-10-01 21:43:57,594 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'msbm10' (msbm10.ttf) normal normal 400 normal>) = 10.05
2023-10-01 21:43:57,594 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-10-01 21:43:57,594 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Liberation Serif' (LiberationSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-10-01 21:43:57,594 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Cantarell' (Cantarell-Thin.otf) normal normal 100 normal>) = 10.335
2023-10-01 21:43:57,594 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'MathJax_WinChrome' (MathJax_WinChrome-Regular.otf) normal normal 400 normal>) = 10.05
2023-10-01 21:43:57,595 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'FreeSerif' (FreeSerifBold.ttf) normal normal 700 normal>) = 10.335
2023-10-01 21:43:57,595 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Bitstream Vera Sans' (VeraBd.ttf) normal normal 700 normal>) = 1.2440909090909091
2023-10-01 21:43:57,595 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Mono' (NotoMono-Regular.ttf) normal normal 400 normal>) = 10.05
2023-10-01 21:43:57,595 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Bitstream Vera Sans' (Vera.ttf) normal normal 400 normal>) = 0.9590909090909092
2023-10-01 21:43:57,595 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'msam10' (msam10.ttf) normal normal 400 normal>) = 10.05
2023-10-01 21:43:57,595 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lato' (Lato-Black.ttf) normal normal 900 normal>) = 10.525
2023-10-01 21:43:57,595 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 0.33499999999999996
2023-10-01 21:43:57,595 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'MathJax_Vector' (MathJax_Vector-Regular.otf) normal normal 500 normal>) = 10.145
2023-10-01 21:43:57,596 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'FreeSerif' (FreeSerifItalic.ttf) italic normal 400 normal>) = 11.05
2023-10-01 21:43:57,596 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'FreeMono' (FreeMonoBoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-10-01 21:43:57,596 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Regular.otf) normal normal 400 normal>) = 10.05
2023-10-01 21:43:57,596 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'URW Gothic' (URWGothic-BookOblique.otf) oblique normal 400 normal>) = 11.05
2023-10-01 21:43:57,596 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Italic.otf) italic normal 400 normal>) = 11.05
2023-10-01 21:43:57,596 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lato' (Lato-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-10-01 21:43:57,596 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Sans' (DejaVuSans-ExtraLight.ttf) normal normal 200 normal>) = 0.24
2023-10-01 21:43:57,597 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'URW Bookman' (URWBookman-LightItalic.otf) italic normal 300 normal>) = 11.145
2023-10-01 21:43:57,597 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Liberation Mono' (LiberationMono-Regular.ttf) normal normal 400 normal>) = 10.05
2023-10-01 21:43:57,597 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Cantarell' (Cantarell-Light.otf) normal normal 300 normal>) = 10.145
2023-10-01 21:43:57,597 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'URW Bookman' (URWBookman-DemiItalic.otf) italic normal 600 normal>) = 11.24
2023-10-01 21:43:57,597 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'MathJax_Size1' (MathJax_Size1-Regular.otf) normal normal 400 normal>) = 10.05
2023-10-01 21:43:57,597 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Liberation Mono' (LiberationMono-Bold.ttf) normal normal 700 normal>) = 10.335
2023-10-01 21:43:57,597 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2023-10-01 21:43:57,597 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Serif' (DejaVuSerifCondensed.ttf) normal normal 400 condensed>) = 10.25
2023-10-01 21:43:57,598 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'MathJax_Math' (MathJax_Math-BoldItalic.otf) italic normal 700 normal>) = 11.335
2023-10-01 21:43:57,598 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Regular.otf) normal normal 400 condensed>) = 10.25
2023-10-01 21:43:57,598 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Sans' (DejaVuSansCondensed.ttf) normal normal 400 condensed>) = 0.25
2023-10-01 21:43:57,598 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'MathJax_Caligraphic' (MathJax_Caligraphic-Bold.otf) normal normal 700 normal>) = 10.335
2023-10-01 21:43:57,598 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Bold.otf) normal normal 700 normal>) = 10.335
2023-10-01 21:43:57,598 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'FreeSerif' (FreeSerif.otf) normal normal 400 normal>) = 10.05
2023-10-01 21:43:57,598 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Serif' (DejaVuSerifCondensed-BoldItalic.ttf) italic normal 700 condensed>) = 11.535
2023-10-01 21:43:57,599 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Nimbus Roman' (NimbusRoman-BoldItalic.otf) italic normal 700 normal>) = 11.335
2023-10-01 21:43:57,599 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2023-10-01 21:43:57,599 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'MathJax_Size2' (MathJax_Size2-Regular.otf) normal normal 400 normal>) = 10.05
2023-10-01 21:43:57,599 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'dsrom10' (dsrom10.ttf) normal normal 400 normal>) = 10.05
2023-10-01 21:43:57,599 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Italic.otf) italic normal 400 normal>) = 11.05
2023-10-01 21:43:57,599 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Liberation Serif' (LiberationSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2023-10-01 21:43:57,599 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'FreeSans' (FreeSans.ttf) normal normal 400 normal>) = 10.05
2023-10-01 21:43:57,600 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Bitstream Vera Serif' (VeraSeBd.ttf) normal normal 700 normal>) = 10.335
2023-10-01 21:43:57,600 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Liberation Mono' (LiberationMono-Regular.ttf) normal normal 400 normal>) = 10.05
2023-10-01 21:43:57,600 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Quicksand' (Quicksand-Regular.ttf) normal normal 400 normal>) = 10.05
2023-10-01 21:43:57,600 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Bitstream Vera Sans' (VeraBI.ttf) oblique normal 700 normal>) = 2.244090909090909
2023-10-01 21:43:57,600 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lato' (Lato-LightItalic.ttf) italic normal 300 normal>) = 11.145
2023-10-01 21:43:57,600 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'FreeMono' (FreeMonoBold.ttf) normal normal 700 normal>) = 10.335
2023-10-01 21:43:57,600 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'MathJax_Math' (MathJax_Math-Italic.otf) italic normal 400 normal>) = 11.05
2023-10-01 21:43:57,600 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'D050000L' (D050000L.otf) normal normal 400 normal>) = 10.05
2023-10-01 21:43:57,601 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'FreeMono' (FreeMono.otf) normal normal 400 normal>) = 10.05
2023-10-01 21:43:57,601 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'FreeSans' (FreeSansBold.otf) normal normal 600 normal>) = 10.24
2023-10-01 21:43:57,601 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Liberation Mono' (LiberationMono-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-10-01 21:43:57,601 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Serif' (DejaVuSerifCondensed-Bold.ttf) normal normal 700 condensed>) = 10.535
2023-10-01 21:43:57,601 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'FreeMono' (FreeMonoOblique.ttf) oblique normal 400 normal>) = 11.05
2023-10-01 21:43:57,601 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Cantarell' (Cantarell-ExtraBold.otf) normal normal 800 normal>) = 10.43
2023-10-01 21:43:57,601 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'FreeSans' (FreeSans.otf) normal normal 400 normal>) = 10.05
2023-10-01 21:43:57,602 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'FreeSerif' (FreeSerifBold.otf) normal normal 700 normal>) = 10.335
2023-10-01 21:43:57,602 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-BoldOblique.otf) oblique normal 700 condensed>) = 11.535
2023-10-01 21:43:57,602 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Liberation Serif' (LiberationSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2023-10-01 21:43:57,602 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Sans' (DejaVuSansCondensed-Bold.ttf) normal normal 700 condensed>) = 0.5349999999999999
2023-10-01 21:43:57,602 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lato' (Lato-Bold.ttf) normal normal 700 normal>) = 10.335
2023-10-01 21:43:57,602 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Symbola' (Symbola_hint.ttf) normal normal 400 normal>) = 10.05
2023-10-01 21:43:57,602 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lato' (Lato-HairlineItalic.ttf) italic normal 100 normal>) = 11.335
2023-10-01 21:43:57,602 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Regular.otf) normal normal 400 normal>) = 10.05
2023-10-01 21:43:57,603 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lato' (Lato-Heavy.ttf) normal normal 800 normal>) = 10.43
2023-10-01 21:43:57,603 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
2023-10-01 21:43:57,603 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'P052' (P052-Roman.otf) normal normal 400 normal>) = 10.05
2023-10-01 21:43:57,603 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lato' (Lato-Semibold.ttf) normal normal 600 normal>) = 10.24
2023-10-01 21:43:57,603 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2023-10-01 21:43:57,603 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'MathJax_Script' (MathJax_Script-Regular.otf) normal normal 400 normal>) = 10.05
2023-10-01 21:43:57,603 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Mono' (NotoSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2023-10-01 21:43:57,604 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lato' (Lato-Hairline.ttf) normal normal 100 normal>) = 10.335
2023-10-01 21:43:57,604 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Nimbus Sans' (NimbusSans-BoldItalic.otf) italic normal 700 normal>) = 11.335
2023-10-01 21:43:57,604 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Liberation Sans' (LiberationSans-Italic.ttf) italic normal 400 normal>) = 11.05
2023-10-01 21:43:57,604 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lato' (Lato-Regular.ttf) normal normal 400 normal>) = 10.05
2023-10-01 21:43:57,604 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Bold.otf) normal normal 700 normal>) = 10.335
2023-10-01 21:43:57,604 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Bold.otf) normal normal 700 normal>) = 10.335
2023-10-01 21:43:57,604 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Liberation Sans' (LiberationSans-Bold.ttf) normal normal 700 normal>) = 10.335
2023-10-01 21:43:57,604 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Bitstream Vera Sans' (VeraIt.ttf) oblique normal 400 normal>) = 1.9590909090909092
2023-10-01 21:43:57,605 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Liberation Sans' (LiberationSans-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-10-01 21:43:57,605 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Cantarell' (Cantarell-Bold.otf) normal normal 700 normal>) = 10.335
2023-10-01 21:43:57,605 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Quicksand Light' (Quicksand-Light.ttf) normal normal 300 normal>) = 10.145
2023-10-01 21:43:57,605 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Nimbus Sans' (NimbusSans-Regular.otf) normal normal 400 normal>) = 10.05
2023-10-01 21:43:57,605 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Liberation Sans' (LiberationSans-Regular.ttf) normal normal 400 normal>) = 10.05
2023-10-01 21:43:57,605 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2023-10-01 21:43:57,605 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Liberation Serif' (LiberationSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2023-10-01 21:43:57,606 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'MathJax_Main' (MathJax_Main-Regular.otf) normal normal 400 normal>) = 10.05
2023-10-01 21:43:57,606 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'FreeMono' (FreeMonoOblique.otf) oblique normal 400 normal>) = 11.05
2023-10-01 21:43:57,606 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Nimbus Sans' (NimbusSans-Bold.otf) normal normal 700 normal>) = 10.335
2023-10-01 21:43:57,606 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Regular.ttf) normal normal 400 condensed>) = 10.25
2023-10-01 21:43:57,606 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'C059' (C059-Bold.otf) normal normal 700 normal>) = 10.335
2023-10-01 21:43:57,606 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'wasy10' (wasy10.ttf) normal normal 400 normal>) = 10.05
2023-10-01 21:43:57,606 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Bold.otf) normal normal 700 condensed>) = 10.535
2023-10-01 21:43:57,606 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Mono' (NotoSansMono-Regular.ttf) normal normal 400 normal>) = 10.05
2023-10-01 21:43:57,607 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lato' (Lato-Italic.ttf) italic normal 400 normal>) = 11.05
2023-10-01 21:43:57,607 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lato' (Lato-Thin.ttf) normal normal 200 normal>) = 10.24
2023-10-01 21:43:57,607 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Standard Symbols PS' (StandardSymbolsPS.otf) normal normal 400 normal>) = 10.05
2023-10-01 21:43:57,607 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Liberation Serif' (LiberationSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2023-10-01 21:43:57,607 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Liberation Sans' (LiberationSans-Regular.ttf) normal normal 400 normal>) = 10.05
2023-10-01 21:43:57,607 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Bold.ttf) normal normal 700 condensed>) = 10.535
2023-10-01 21:43:57,607 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'URW Gothic' (URWGothic-Demi.otf) normal normal 600 normal>) = 10.24
2023-10-01 21:43:57,608 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Droid Sans Fallback' (DroidSansFallbackFull.ttf) normal normal 400 normal>) = 10.05
2023-10-01 21:43:57,608 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'FreeSans' (FreeSansOblique.otf) oblique normal 400 normal>) = 11.05
2023-10-01 21:43:57,608 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Liberation Mono' (LiberationMono-Bold.ttf) normal normal 700 normal>) = 10.335
2023-10-01 21:43:57,608 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Serif' (DejaVuSerifCondensed-Italic.ttf) italic normal 400 condensed>) = 11.25
2023-10-01 21:43:57,608 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Liberation Mono' (LiberationMono-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-10-01 21:43:57,608 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Italic.otf) italic normal 400 normal>) = 11.05
2023-10-01 21:43:57,608 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-BoldItalic.ttf) italic normal 700 condensed>) = 11.535
2023-10-01 21:43:57,609 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'FreeSerif' (FreeSerif.ttf) normal normal 400 normal>) = 10.05
2023-10-01 21:43:57,609 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2023-10-01 21:43:57,609 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.05
2023-10-01 21:43:57,609 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'MathJax_AMS' (MathJax_AMS-Regular.otf) normal normal 400 normal>) = 10.05
2023-10-01 21:43:57,609 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Liberation Serif' (LiberationSerif-Regular.ttf) normal normal 400 normal>) = 10.05
2023-10-01 21:43:57,609 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'stmary10' (stmary10.ttf) normal normal 400 normal>) = 10.05
2023-10-01 21:43:57,609 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Sans' (DejaVuSansCondensed-Oblique.ttf) oblique normal 400 condensed>) = 1.25
2023-10-01 21:43:57,610 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lato' (Lato-ThinItalic.ttf) italic normal 200 normal>) = 11.24
2023-10-01 21:43:57,610 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'MathJax_Main' (MathJax_Main-Italic.otf) italic normal 400 normal>) = 11.05
2023-10-01 21:43:57,610 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2023-10-01 21:43:57,610 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'FreeSans' (FreeSansOblique.ttf) oblique normal 400 normal>) = 11.05
2023-10-01 21:43:57,610 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'FreeSerif' (FreeSerifBoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-10-01 21:43:57,610 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'MathJax_Main' (MathJax_Main-Bold.otf) normal normal 700 normal>) = 10.335
2023-10-01 21:43:57,610 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'MathJax_WinIE6' (MathJax_WinIE6-Regular.otf) normal normal 400 normal>) = 10.05
2023-10-01 21:43:57,610 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-10-01 21:43:57,611 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'FontAwesome' (FontAwesome.otf) normal normal 400 normal>) = 10.05
2023-10-01 21:43:57,611 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Bitstream Vera Sans Mono' (VeraMoIt.ttf) oblique normal 400 normal>) = 11.05
2023-10-01 21:43:57,611 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-10-01 21:43:57,611 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Liberation Serif' (LiberationSerif-Regular.ttf) normal normal 400 normal>) = 10.05
2023-10-01 21:43:57,611 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Oblique.otf) oblique normal 400 condensed>) = 11.25
2023-10-01 21:43:57,611 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Cantarell' (Cantarell-Regular.otf) normal normal 400 normal>) = 10.05
2023-10-01 21:43:57,611 - matplotlib.font_manager - DEBUG - findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=20.16 to DejaVu Sans ('/home/kai/.local/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf') with score of 0.050000.
2023-10-01 21:43:58,256 - matplotlib.font_manager - DEBUG - findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=15.0.
2023-10-01 21:43:58,257 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2023-10-01 21:43:58,257 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 10.05
2023-10-01 21:43:58,257 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2023-10-01 21:43:58,257 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2023-10-01 21:43:58,257 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 10.05
2023-10-01 21:43:58,257 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2023-10-01 21:43:58,257 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.335
2023-10-01 21:43:58,258 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 10.05
2023-10-01 21:43:58,258 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-10-01 21:43:58,258 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 10.05
2023-10-01 21:43:58,258 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2023-10-01 21:43:58,258 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2023-10-01 21:43:58,258 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.335
2023-10-01 21:43:58,258 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-10-01 21:43:58,259 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.335
2023-10-01 21:43:58,259 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.05
2023-10-01 21:43:58,259 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.335
2023-10-01 21:43:58,259 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2023-10-01 21:43:58,259 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-10-01 21:43:58,259 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2023-10-01 21:43:58,259 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2023-10-01 21:43:58,260 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 10.05
2023-10-01 21:43:58,260 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.335
2023-10-01 21:43:58,260 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2023-10-01 21:43:58,260 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2023-10-01 21:43:58,260 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2023-10-01 21:43:58,260 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.335
2023-10-01 21:43:58,260 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
2023-10-01 21:43:58,260 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 10.05
2023-10-01 21:43:58,261 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.335
2023-10-01 21:43:58,261 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2023-10-01 21:43:58,261 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 0.33499999999999996
2023-10-01 21:43:58,261 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 1.335
2023-10-01 21:43:58,261 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2023-10-01 21:43:58,261 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 10.05
2023-10-01 21:43:58,261 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2023-10-01 21:43:58,262 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2023-10-01 21:43:58,262 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.335
2023-10-01 21:43:58,262 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'MathJax_Typewriter' (MathJax_Typewriter-Regular.otf) normal normal 400 normal>) = 10.05
2023-10-01 21:43:58,262 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'MathJax_Size3' (MathJax_Size3-Regular.otf) normal normal 400 normal>) = 10.05
2023-10-01 21:43:58,262 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'FreeSans' (FreeSansBold.ttf) normal normal 600 normal>) = 10.24
2023-10-01 21:43:58,262 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lato' (Lato-SemiboldItalic.ttf) italic normal 600 normal>) = 11.24
2023-10-01 21:43:58,262 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Quicksand' (Quicksand-Bold.ttf) normal normal 700 normal>) = 10.335
2023-10-01 21:43:58,262 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'FreeMono' (FreeMonoBold.otf) normal normal 700 normal>) = 10.335
2023-10-01 21:43:58,263 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lato' (Lato-BlackItalic.ttf) italic normal 900 normal>) = 11.525
2023-10-01 21:43:58,263 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'C059' (C059-Italic.otf) italic normal 400 normal>) = 11.05
2023-10-01 21:43:58,263 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'MathJax_Math' (MathJax_Math-Regular.otf) normal normal 400 normal>) = 10.05
2023-10-01 21:43:58,263 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Math TeX Gyre' (DejaVuMathTeXGyre.ttf) normal normal 400 normal>) = 10.05
2023-10-01 21:43:58,263 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'FreeSerif' (FreeSerifItalic.otf) italic normal 400 normal>) = 11.05
2023-10-01 21:43:58,263 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'URW Bookman' (URWBookman-Demi.otf) normal normal 600 normal>) = 10.24
2023-10-01 21:43:58,263 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'OpenSymbol' (opens___.ttf) normal normal 400 normal>) = 10.05
2023-10-01 21:43:58,264 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Liberation Mono' (LiberationMono-Italic.ttf) italic normal 400 normal>) = 11.05
2023-10-01 21:43:58,264 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'FreeMono' (FreeMonoBoldOblique.otf) oblique normal 700 normal>) = 11.335
2023-10-01 21:43:58,264 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Bitstream Vera Sans Mono' (VeraMoBI.ttf) oblique normal 700 normal>) = 11.335
2023-10-01 21:43:58,264 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'MathJax_Fraktur' (MathJax_Fraktur-Bold.otf) normal normal 700 normal>) = 10.335
2023-10-01 21:43:58,264 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Sans' (DejaVuSansCondensed-BoldOblique.ttf) oblique normal 700 condensed>) = 1.535
2023-10-01 21:43:58,264 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'FreeMono' (FreeMono.ttf) normal normal 400 normal>) = 10.05
2023-10-01 21:43:58,264 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lato' (Lato-Medium.ttf) normal normal 500 normal>) = 10.145
2023-10-01 21:43:58,264 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Bitstream Vera Sans Mono' (VeraMono.ttf) normal normal 400 normal>) = 10.05
2023-10-01 21:43:58,265 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'MathJax_Vector-Bold' (MathJax_Vector-Bold.otf) normal normal 500 normal>) = 10.145
2023-10-01 21:43:58,265 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Liberation Sans' (LiberationSans-Bold.ttf) normal normal 700 normal>) = 10.335
2023-10-01 21:43:58,265 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-BoldItalic.otf) italic normal 700 normal>) = 11.335
2023-10-01 21:43:58,265 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'eufm10' (eufm10.ttf) normal normal 400 normal>) = 10.05
2023-10-01 21:43:58,265 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'P052' (P052-Bold.otf) normal normal 700 normal>) = 10.335
2023-10-01 21:43:58,265 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'FreeSans' (FreeSansBoldOblique.otf) oblique normal 600 normal>) = 11.24
2023-10-01 21:43:58,265 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'MathJax_Size4' (MathJax_Size4-Regular.otf) normal normal 400 normal>) = 10.05
2023-10-01 21:43:58,266 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Italic.ttf) italic normal 400 condensed>) = 11.25
2023-10-01 21:43:58,266 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'FontAwesome' (fontawesome-webfont.ttf) normal normal 400 normal>) = 10.05
2023-10-01 21:43:58,266 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2023-10-01 21:43:58,266 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Nimbus Sans' (NimbusSans-Italic.otf) italic normal 400 normal>) = 11.05
2023-10-01 21:43:58,266 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'C059' (C059-BdIta.otf) italic normal 700 normal>) = 11.335
2023-10-01 21:43:58,266 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Quicksand Medium' (Quicksand-Medium.ttf) normal normal 500 normal>) = 10.145
2023-10-01 21:43:58,266 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Liberation Serif' (LiberationSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-10-01 21:43:58,267 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Bitstream Vera Sans Mono' (VeraMoBd.ttf) normal normal 700 normal>) = 10.335
2023-10-01 21:43:58,267 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2023-10-01 21:43:58,267 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Liberation Mono' (LiberationMono-Italic.ttf) italic normal 400 normal>) = 11.05
2023-10-01 21:43:58,267 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'MathJax_Fraktur' (MathJax_Fraktur-Regular.otf) normal normal 400 normal>) = 10.05
2023-10-01 21:43:58,267 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'P052' (P052-BoldItalic.otf) italic normal 700 normal>) = 11.335
2023-10-01 21:43:58,267 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lato' (Lato-MediumItalic.ttf) italic normal 500 normal>) = 11.145
2023-10-01 21:43:58,267 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'elusiveicons' (elusiveicons-webfont.ttf) normal normal 500 normal>) = 10.145
2023-10-01 21:43:58,268 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Regular.otf) normal normal 400 normal>) = 10.05
2023-10-01 21:43:58,268 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Bitstream Vera Serif' (VeraSe.ttf) normal normal 400 normal>) = 10.05
2023-10-01 21:43:58,268 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'rsfs10' (rsfs10.ttf) italic normal 400 normal>) = 11.05
2023-10-01 21:43:58,268 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Liberation Sans' (LiberationSans-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-10-01 21:43:58,268 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'FreeSans' (FreeSansBoldOblique.ttf) oblique normal 600 normal>) = 11.24
2023-10-01 21:43:58,268 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Liberation Sans' (LiberationSans-Italic.ttf) italic normal 400 normal>) = 11.05
2023-10-01 21:43:58,268 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Z003' (Z003-MediumItalic.otf) italic normal 500 normal>) = 11.145
2023-10-01 21:43:58,268 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'C059' (C059-Roman.otf) normal normal 400 normal>) = 10.05
2023-10-01 21:43:58,269 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'esint10' (esint10.ttf) normal normal 400 normal>) = 10.05
2023-10-01 21:43:58,269 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2023-10-01 21:43:58,269 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'URW Bookman' (URWBookman-Light.otf) normal normal 300 normal>) = 10.145
2023-10-01 21:43:58,269 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 1.335
2023-10-01 21:43:58,269 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'URW Gothic' (URWGothic-DemiOblique.otf) oblique normal 600 normal>) = 11.24
2023-10-01 21:43:58,269 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'FreeSerif' (FreeSerifBoldItalic.otf) italic normal 700 normal>) = 11.335
2023-10-01 21:43:58,269 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'URW Gothic' (URWGothic-Book.otf) normal normal 400 normal>) = 10.05
2023-10-01 21:43:58,270 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'P052' (P052-Italic.otf) italic normal 400 normal>) = 11.05
2023-10-01 21:43:58,270 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lato' (Lato-Light.ttf) normal normal 300 normal>) = 10.145
2023-10-01 21:43:58,270 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'MathJax_Caligraphic' (MathJax_Caligraphic-Regular.otf) normal normal 400 normal>) = 10.05
2023-10-01 21:43:58,270 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lato' (Lato-HeavyItalic.ttf) italic normal 800 normal>) = 11.43
2023-10-01 21:43:58,270 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'msbm10' (msbm10.ttf) normal normal 400 normal>) = 10.05
2023-10-01 21:43:58,270 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2023-10-01 21:43:58,270 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Liberation Serif' (LiberationSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-10-01 21:43:58,270 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Cantarell' (Cantarell-Thin.otf) normal normal 100 normal>) = 10.335
2023-10-01 21:43:58,271 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'MathJax_WinChrome' (MathJax_WinChrome-Regular.otf) normal normal 400 normal>) = 10.05
2023-10-01 21:43:58,271 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'FreeSerif' (FreeSerifBold.ttf) normal normal 700 normal>) = 10.335
2023-10-01 21:43:58,271 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Bitstream Vera Sans' (VeraBd.ttf) normal normal 700 normal>) = 1.2440909090909091
2023-10-01 21:43:58,271 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Mono' (NotoMono-Regular.ttf) normal normal 400 normal>) = 10.05
2023-10-01 21:43:58,271 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Bitstream Vera Sans' (Vera.ttf) normal normal 400 normal>) = 0.9590909090909092
2023-10-01 21:43:58,271 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'msam10' (msam10.ttf) normal normal 400 normal>) = 10.05
2023-10-01 21:43:58,271 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lato' (Lato-Black.ttf) normal normal 900 normal>) = 10.525
2023-10-01 21:43:58,272 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 0.33499999999999996
2023-10-01 21:43:58,272 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'MathJax_Vector' (MathJax_Vector-Regular.otf) normal normal 500 normal>) = 10.145
2023-10-01 21:43:58,272 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'FreeSerif' (FreeSerifItalic.ttf) italic normal 400 normal>) = 11.05
2023-10-01 21:43:58,272 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'FreeMono' (FreeMonoBoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-10-01 21:43:58,272 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Regular.otf) normal normal 400 normal>) = 10.05
2023-10-01 21:43:58,272 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'URW Gothic' (URWGothic-BookOblique.otf) oblique normal 400 normal>) = 11.05
2023-10-01 21:43:58,272 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Italic.otf) italic normal 400 normal>) = 11.05
2023-10-01 21:43:58,273 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lato' (Lato-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-10-01 21:43:58,273 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Sans' (DejaVuSans-ExtraLight.ttf) normal normal 200 normal>) = 0.24
2023-10-01 21:43:58,273 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'URW Bookman' (URWBookman-LightItalic.otf) italic normal 300 normal>) = 11.145
2023-10-01 21:43:58,273 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Liberation Mono' (LiberationMono-Regular.ttf) normal normal 400 normal>) = 10.05
2023-10-01 21:43:58,273 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Cantarell' (Cantarell-Light.otf) normal normal 300 normal>) = 10.145
2023-10-01 21:43:58,273 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'URW Bookman' (URWBookman-DemiItalic.otf) italic normal 600 normal>) = 11.24
2023-10-01 21:43:58,273 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'MathJax_Size1' (MathJax_Size1-Regular.otf) normal normal 400 normal>) = 10.05
2023-10-01 21:43:58,273 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Liberation Mono' (LiberationMono-Bold.ttf) normal normal 700 normal>) = 10.335
2023-10-01 21:43:58,274 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2023-10-01 21:43:58,274 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Serif' (DejaVuSerifCondensed.ttf) normal normal 400 condensed>) = 10.25
2023-10-01 21:43:58,274 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'MathJax_Math' (MathJax_Math-BoldItalic.otf) italic normal 700 normal>) = 11.335
2023-10-01 21:43:58,274 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Regular.otf) normal normal 400 condensed>) = 10.25
2023-10-01 21:43:58,274 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Sans' (DejaVuSansCondensed.ttf) normal normal 400 condensed>) = 0.25
2023-10-01 21:43:58,274 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'MathJax_Caligraphic' (MathJax_Caligraphic-Bold.otf) normal normal 700 normal>) = 10.335
2023-10-01 21:43:58,274 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Bold.otf) normal normal 700 normal>) = 10.335
2023-10-01 21:43:58,275 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'FreeSerif' (FreeSerif.otf) normal normal 400 normal>) = 10.05
2023-10-01 21:43:58,275 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Serif' (DejaVuSerifCondensed-BoldItalic.ttf) italic normal 700 condensed>) = 11.535
2023-10-01 21:43:58,275 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Nimbus Roman' (NimbusRoman-BoldItalic.otf) italic normal 700 normal>) = 11.335
2023-10-01 21:43:58,275 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2023-10-01 21:43:58,275 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'MathJax_Size2' (MathJax_Size2-Regular.otf) normal normal 400 normal>) = 10.05
2023-10-01 21:43:58,275 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'dsrom10' (dsrom10.ttf) normal normal 400 normal>) = 10.05
2023-10-01 21:43:58,275 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Nimbus Roman' (NimbusRoman-Italic.otf) italic normal 400 normal>) = 11.05
2023-10-01 21:43:58,275 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Liberation Serif' (LiberationSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2023-10-01 21:43:58,276 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'FreeSans' (FreeSans.ttf) normal normal 400 normal>) = 10.05
2023-10-01 21:43:58,276 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Bitstream Vera Serif' (VeraSeBd.ttf) normal normal 700 normal>) = 10.335
2023-10-01 21:43:58,276 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Liberation Mono' (LiberationMono-Regular.ttf) normal normal 400 normal>) = 10.05
2023-10-01 21:43:58,276 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Quicksand' (Quicksand-Regular.ttf) normal normal 400 normal>) = 10.05
2023-10-01 21:43:58,276 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Bitstream Vera Sans' (VeraBI.ttf) oblique normal 700 normal>) = 2.244090909090909
2023-10-01 21:43:58,276 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lato' (Lato-LightItalic.ttf) italic normal 300 normal>) = 11.145
2023-10-01 21:43:58,276 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'FreeMono' (FreeMonoBold.ttf) normal normal 700 normal>) = 10.335
2023-10-01 21:43:58,277 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'MathJax_Math' (MathJax_Math-Italic.otf) italic normal 400 normal>) = 11.05
2023-10-01 21:43:58,277 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'D050000L' (D050000L.otf) normal normal 400 normal>) = 10.05
2023-10-01 21:43:58,277 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'FreeMono' (FreeMono.otf) normal normal 400 normal>) = 10.05
2023-10-01 21:43:58,277 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'FreeSans' (FreeSansBold.otf) normal normal 600 normal>) = 10.24
2023-10-01 21:43:58,277 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Liberation Mono' (LiberationMono-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-10-01 21:43:58,277 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Serif' (DejaVuSerifCondensed-Bold.ttf) normal normal 700 condensed>) = 10.535
2023-10-01 21:43:58,277 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'FreeMono' (FreeMonoOblique.ttf) oblique normal 400 normal>) = 11.05
2023-10-01 21:43:58,277 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Cantarell' (Cantarell-ExtraBold.otf) normal normal 800 normal>) = 10.43
2023-10-01 21:43:58,278 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'FreeSans' (FreeSans.otf) normal normal 400 normal>) = 10.05
2023-10-01 21:43:58,278 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'FreeSerif' (FreeSerifBold.otf) normal normal 700 normal>) = 10.335
2023-10-01 21:43:58,278 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-BoldOblique.otf) oblique normal 700 condensed>) = 11.535
2023-10-01 21:43:58,278 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Liberation Serif' (LiberationSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2023-10-01 21:43:58,278 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Sans' (DejaVuSansCondensed-Bold.ttf) normal normal 700 condensed>) = 0.5349999999999999
2023-10-01 21:43:58,278 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lato' (Lato-Bold.ttf) normal normal 700 normal>) = 10.335
2023-10-01 21:43:58,278 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Symbola' (Symbola_hint.ttf) normal normal 400 normal>) = 10.05
2023-10-01 21:43:58,279 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lato' (Lato-HairlineItalic.ttf) italic normal 100 normal>) = 11.335
2023-10-01 21:43:58,279 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Regular.otf) normal normal 400 normal>) = 10.05
2023-10-01 21:43:58,279 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lato' (Lato-Heavy.ttf) normal normal 800 normal>) = 10.43
2023-10-01 21:43:58,279 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
2023-10-01 21:43:58,279 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'P052' (P052-Roman.otf) normal normal 400 normal>) = 10.05
2023-10-01 21:43:58,279 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lato' (Lato-Semibold.ttf) normal normal 600 normal>) = 10.24
2023-10-01 21:43:58,279 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2023-10-01 21:43:58,279 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'MathJax_Script' (MathJax_Script-Regular.otf) normal normal 400 normal>) = 10.05
2023-10-01 21:43:58,280 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Mono' (NotoSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2023-10-01 21:43:58,280 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lato' (Lato-Hairline.ttf) normal normal 100 normal>) = 10.335
2023-10-01 21:43:58,280 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Nimbus Sans' (NimbusSans-BoldItalic.otf) italic normal 700 normal>) = 11.335
2023-10-01 21:43:58,280 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Liberation Sans' (LiberationSans-Italic.ttf) italic normal 400 normal>) = 11.05
2023-10-01 21:43:58,280 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lato' (Lato-Regular.ttf) normal normal 400 normal>) = 10.05
2023-10-01 21:43:58,280 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'MathJax_SansSerif' (MathJax_SansSerif-Bold.otf) normal normal 700 normal>) = 10.335
2023-10-01 21:43:58,280 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Bold.otf) normal normal 700 normal>) = 10.335
2023-10-01 21:43:58,281 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Liberation Sans' (LiberationSans-Bold.ttf) normal normal 700 normal>) = 10.335
2023-10-01 21:43:58,281 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Bitstream Vera Sans' (VeraIt.ttf) oblique normal 400 normal>) = 1.9590909090909092
2023-10-01 21:43:58,281 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Liberation Sans' (LiberationSans-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-10-01 21:43:58,281 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Cantarell' (Cantarell-Bold.otf) normal normal 700 normal>) = 10.335
2023-10-01 21:43:58,281 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Quicksand Light' (Quicksand-Light.ttf) normal normal 300 normal>) = 10.145
2023-10-01 21:43:58,281 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Nimbus Sans' (NimbusSans-Regular.otf) normal normal 400 normal>) = 10.05
2023-10-01 21:43:58,281 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Liberation Sans' (LiberationSans-Regular.ttf) normal normal 400 normal>) = 10.05
2023-10-01 21:43:58,281 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2023-10-01 21:43:58,282 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Liberation Serif' (LiberationSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2023-10-01 21:43:58,282 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'MathJax_Main' (MathJax_Main-Regular.otf) normal normal 400 normal>) = 10.05
2023-10-01 21:43:58,282 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'FreeMono' (FreeMonoOblique.otf) oblique normal 400 normal>) = 11.05
2023-10-01 21:43:58,282 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Nimbus Sans' (NimbusSans-Bold.otf) normal normal 700 normal>) = 10.335
2023-10-01 21:43:58,282 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Regular.ttf) normal normal 400 condensed>) = 10.25
2023-10-01 21:43:58,282 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'C059' (C059-Bold.otf) normal normal 700 normal>) = 10.335
2023-10-01 21:43:58,282 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'wasy10' (wasy10.ttf) normal normal 400 normal>) = 10.05
2023-10-01 21:43:58,283 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Bold.otf) normal normal 700 condensed>) = 10.535
2023-10-01 21:43:58,283 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Noto Sans Mono' (NotoSansMono-Regular.ttf) normal normal 400 normal>) = 10.05
2023-10-01 21:43:58,283 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lato' (Lato-Italic.ttf) italic normal 400 normal>) = 11.05
2023-10-01 21:43:58,283 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lato' (Lato-Thin.ttf) normal normal 200 normal>) = 10.24
2023-10-01 21:43:58,283 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Standard Symbols PS' (StandardSymbolsPS.otf) normal normal 400 normal>) = 10.05
2023-10-01 21:43:58,283 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Liberation Serif' (LiberationSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2023-10-01 21:43:58,283 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Liberation Sans' (LiberationSans-Regular.ttf) normal normal 400 normal>) = 10.05
2023-10-01 21:43:58,283 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-Bold.ttf) normal normal 700 condensed>) = 10.535
2023-10-01 21:43:58,284 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'URW Gothic' (URWGothic-Demi.otf) normal normal 600 normal>) = 10.24
2023-10-01 21:43:58,284 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Droid Sans Fallback' (DroidSansFallbackFull.ttf) normal normal 400 normal>) = 10.05
2023-10-01 21:43:58,284 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'FreeSans' (FreeSansOblique.otf) oblique normal 400 normal>) = 11.05
2023-10-01 21:43:58,284 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Liberation Mono' (LiberationMono-Bold.ttf) normal normal 700 normal>) = 10.335
2023-10-01 21:43:58,284 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Serif' (DejaVuSerifCondensed-Italic.ttf) italic normal 400 condensed>) = 11.25
2023-10-01 21:43:58,284 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Liberation Mono' (LiberationMono-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-10-01 21:43:58,284 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Nimbus Mono PS' (NimbusMonoPS-Italic.otf) italic normal 400 normal>) = 11.05
2023-10-01 21:43:58,285 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Liberation Sans Narrow' (LiberationSansNarrow-BoldItalic.ttf) italic normal 700 condensed>) = 11.535
2023-10-01 21:43:58,285 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'FreeSerif' (FreeSerif.ttf) normal normal 400 normal>) = 10.05
2023-10-01 21:43:58,285 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2023-10-01 21:43:58,285 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.05
2023-10-01 21:43:58,285 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'MathJax_AMS' (MathJax_AMS-Regular.otf) normal normal 400 normal>) = 10.05
2023-10-01 21:43:58,285 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Liberation Serif' (LiberationSerif-Regular.ttf) normal normal 400 normal>) = 10.05
2023-10-01 21:43:58,285 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'stmary10' (stmary10.ttf) normal normal 400 normal>) = 10.05
2023-10-01 21:43:58,285 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Sans' (DejaVuSansCondensed-Oblique.ttf) oblique normal 400 condensed>) = 1.25
2023-10-01 21:43:58,286 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Lato' (Lato-ThinItalic.ttf) italic normal 200 normal>) = 11.24
2023-10-01 21:43:58,286 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'MathJax_Main' (MathJax_Main-Italic.otf) italic normal 400 normal>) = 11.05
2023-10-01 21:43:58,286 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2023-10-01 21:43:58,286 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'FreeSans' (FreeSansOblique.ttf) oblique normal 400 normal>) = 11.05
2023-10-01 21:43:58,286 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'FreeSerif' (FreeSerifBoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-10-01 21:43:58,286 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'MathJax_Main' (MathJax_Main-Bold.otf) normal normal 700 normal>) = 10.335
2023-10-01 21:43:58,286 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'MathJax_WinIE6' (MathJax_WinIE6-Regular.otf) normal normal 400 normal>) = 10.05
2023-10-01 21:43:58,287 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2023-10-01 21:43:58,287 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'FontAwesome' (FontAwesome.otf) normal normal 400 normal>) = 10.05
2023-10-01 21:43:58,287 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Bitstream Vera Sans Mono' (VeraMoIt.ttf) oblique normal 400 normal>) = 11.05
2023-10-01 21:43:58,287 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2023-10-01 21:43:58,287 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Liberation Serif' (LiberationSerif-Regular.ttf) normal normal 400 normal>) = 10.05
2023-10-01 21:43:58,287 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Nimbus Sans Narrow' (NimbusSansNarrow-Oblique.otf) oblique normal 400 condensed>) = 11.25
2023-10-01 21:43:58,287 - matplotlib.font_manager - DEBUG - findfont: score(<Font 'Cantarell' (Cantarell-Regular.otf) normal normal 400 normal>) = 10.05
2023-10-01 21:43:58,287 - matplotlib.font_manager - DEBUG - findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=15.0 to DejaVu Sans ('/home/kai/.local/lib/python3.9/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf') with score of 0.050000.
